import { Ctx } from '@milkdown/core';
import type { Decoration, EditorView, NodeView, ViewFactory } from '@milkdown/prose';
import { Mark, Node } from '@milkdown/prose';
import React from 'react';
export declare const createReactView: (addPortal: (portal: React.ReactPortal) => void, removePortalByKey: (key: string) => void) => (component: React.FC) => (ctx: Ctx) => ViewFactory;
export declare class ReactNodeView implements NodeView {
    private ctx;
    private component;
    private addPortal;
    private removePortalByKey;
    private node;
    private view;
    private getPos;
    private decorations;
    dom: HTMLElement | undefined;
    contentDOM: HTMLElement | null | undefined;
    key: string;
    get isInlineOrMark(): boolean;
    constructor(ctx: Ctx, component: React.FC, addPortal: (portal: React.ReactPortal) => void, removePortalByKey: (key: string) => void, node: Node | Mark, view: EditorView, getPos: boolean | (() => number), decorations: Decoration[]);
    renderPortal(): void;
    destroy(): void;
    ignoreMutation(mutation: MutationRecord | {
        type: 'selection';
        target: Element;
    }): boolean;
}
//# sourceMappingURL=ReactNodeView.d.ts.map