{
  "name": "@milkdown/plugin-listener",
  "version": "5.5.0",
  "type": "module",
  "main": "./lib/index.es.js",
  "types": "./lib/index.d.ts",
  "sideEffects": false,
  "license": "MIT",
  "files": [
    "lib",
    "src"
  ],
  "keywords": [
    "milkdown",
    "milkdown plugin"
  ],
  "devDependencies": {
    "@milkdown/core": "5.5.0",
    "@milkdown/prose": "5.5.0"
  },
  "peerDependencies": {
    "@milkdown/core": "^5.4.0",
    "@milkdown/prose": "^5.4.0"
  },
  "dependencies": {
    "@milkdown/utils": "5.5.0",
    "tslib": "^2.3.1"
  },
  "scripts": {
    "start": "vite build --watch",
    "test": "vitest",
    "tsc": "tsc --noEmit",
    "build": "vite build"
  },
  "readme": "# @milkdown/plugin-listener\n\nListener plugin for [milkdown](https://saul-mirone.github.io/milkdown/).\n\n# Example Usage\n\n```typescript\nimport { Editor } from '@milkdown/core';\nimport { commonmark } from '@milkdown/preset-commonmark';\nimport { nord } from '@milkdown/theme-nord';\n\nimport { listener, listenerCtx } from '@milkdown/plugin-listener';\n\nEditor.make()\n    .config((ctx) => {\n        ctx.get(listenerCtx)\n            .beforeMount((ctx) => {\n                // before the editor mounts\n            })\n            .mounted((ctx) => {\n                // after the editor mounts\n            })\n            .updated((ctx, doc, prevDoc) => {\n                // when editor state updates\n            })\n            .markdownUpdated((ctx, markdown, prevMarkdown) => {\n                // when markdown updates\n            })\n            .blur((ctx) => {\n                // when editor loses focus\n            })\n            .focus((ctx) => {\n                // when focus editor\n            })\n            .destroy((ctx) => {\n                // when editor is being destroyed\n            });\n    })\n    .use(nord)\n    .use(commonmark)\n    .use(listener)\n    .create();\n```\n\n# License\n\nMilkdown is open sourced software licensed under [MIT license](https://github.com/Saul-Mirone/milkdown/blob/main/LICENSE).\n"
}