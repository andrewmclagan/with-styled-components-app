import { jsx } from 'react/jsx-runtime';
import styled, { keyframes } from 'styled-components';
import { shouldForwardProp, compose, customProps } from '../../../utils/systemProps.js';
import { space, layout } from 'system-props';

const animation = keyframes`
  100% {
    transform: translateX(200%);
  }
`;
const AnimatedWave = styled.div`
  animation: ${animation} 1200ms ease-in-out infinite;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0),
    rgba(255, 255, 255, 0.6),
    rgba(255, 255, 255, 0)
  );
  height: 100%;
  transform: translateX(-100%);
  width: 50%;

  @media (prefers-reduced-motion) {
    animation: none;
  }
`;
const StyledSkeleton = styled.div.withConfig({
    shouldForwardProp
})(compose(layout, space, {
    backgroundColor: {
        property: 'backgroundColor',
        scale: 'colors'
    },
    borderRadius: {
        property: 'borderRadius',
        scale: 'radii'
    },
    content: customProps.content,
    marginInline: customProps.marginInline,
    position: true
}));
function Skeleton(props) {
    const { animation: animation1 , borderRadius ='borderRadiusRoot' , height =10 , maxWidth ='sizeFull' , testHook , ...otherProps } = props;
    return jsx(StyledSkeleton, Object.assign({
        borderRadius: borderRadius,
        height: height,
        maxWidth: maxWidth
    }, otherProps, {
        backgroundColor: "colorFiftyShadesLightest",
        overflow: "hidden",
        "aria-busy": "true",
        "data-test": testHook
    }, {
        children: animation1 === 'wave' && jsx(AnimatedWave, {}, void 0)
    }), void 0);
}

export { StyledSkeleton, Skeleton as default };
