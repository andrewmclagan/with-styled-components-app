import { jsx } from 'react/jsx-runtime';
import { useHover } from '@react-aria/interactions';
import Box from '../Box/Box.js';

const variants = {
    bordered: 'bordered',
    rounded: 'rounded',
    elevated: 'elevated'
};
const defaultStyles = {
    backgroundColor: 'colorCoreWhite',
    display: 'block',
    transition: 'transitionRoot'
};
const borderedStyles = {
    ...defaultStyles,
    borderWidth: 'borderWidthRoot',
    borderStyle: 'solid',
    borderColor: 'colorFiftyShadesLighter'
};
const roundedStyles = {
    ...defaultStyles,
    ...borderedStyles,
    borderRadius: 'borderRadiusRoot'
};
const elevatedStyles = {
    ...defaultStyles,
    borderRadius: 'borderRadiusRoot',
    boxShadow: 'boxShadowCard'
};
const hoverAndFocusStyles = {
    boxShadow: 'boxShadowCardHover',
    // relative positioning and zIndex are needed to have stacked cards' shadows show above their siblings
    position: 'relative',
    zIndex: 'zIndex1'
};
const variantStyles = {
    [variants.bordered]: borderedStyles,
    [variants.rounded]: roundedStyles,
    [variants.elevated]: elevatedStyles
};
function Card(props) {
    const { as ='div' , withHover =true , variant =variants.bordered , children , ...otherProps } = props;
    const { hoverProps , isHovered  } = useHover({
        isDisabled: !withHover
    });
    return jsx(Box, Object.assign({}, otherProps, {
        as: as
    }, variantStyles[variant], hoverProps, isHovered && hoverAndFocusStyles, {
        _focusWithin: withHover ? hoverAndFocusStyles : undefined
    }, {
        children: children
    }), void 0);
}

export { Card as default, variants };
