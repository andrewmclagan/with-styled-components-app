import { jsx } from 'react/jsx-runtime';
import keyMirror from 'keymirror';
import { forwardRef } from 'react';
import Box from '../Box/Box.js';
import Skeleton from '../Skeleton/Skeleton.js';

keyMirror({
    bodyLarge: null,
    bodyRoot: null,
    bodySmall: null,
    bodySmall1X: null,
    bodySmall2X: null,
    bodySmall3X: null,
    lead: null
});
const defaultStyles = {
    color: 'colorCoreText',
    fontSize: 'fontSizeRoot',
    letterSpacing: 'letterSpacingSmall',
    lineHeight: 'lineHeightRoot'
};
const leadStyles = {
    ...defaultStyles,
    color: 'colorFiftyShadesDark',
    fontSize: 'fontSizeLarge',
    fontWeight: 'fontWeightLight'
};
const bodyLargeStyles = {
    ...defaultStyles,
    fontFamily: 'fontFamilySystem',
    fontSize: 'fontSizeLarge',
    letterSpacing: 'letterSpacingLarge',
    lineHeight: 'lineHeightSmall'
};
const bodyRootStyles = {
    ...defaultStyles,
    fontFamily: 'fontFamilySystem',
    letterSpacing: 'letterSpacingLarge1X',
    lineHeight: 'lineHeightRoot'
};
const bodySmallStyles = {
    ...defaultStyles,
    fontFamily: 'fontFamilySystem',
    fontSize: 'fontSizeSmall',
    letterSpacing: 'letterSpacingRoot',
    lineHeight: 'lineHeightLarge'
};
const bodySmall1XStyles = {
    ...defaultStyles,
    fontFamily: 'fontFamilySystem',
    fontSize: 'fontSizeSmall1X',
    letterSpacing: 'letterSpacingSmall1X',
    lineHeight: 'lineHeightSmall1X'
};
const bodySmall2XStyles = {
    ...defaultStyles,
    fontFamily: 'fontFamilySystem',
    fontSize: 'fontSizeSmall2X',
    letterSpacing: 'letterSpacingNone',
    lineHeight: 'lineHeightLarge'
};
const bodySmall3XStyles = {
    ...defaultStyles,
    fontFamily: 'fontFamilySystem',
    fontSize: 'fontSizeSmall3X',
    letterSpacing: 'letterSpacingSmall1X',
    lineHeight: 'lineHeightLarge1X'
};
const variantStyles = {
    bodyLarge: bodyLargeStyles,
    bodyRoot: bodyRootStyles,
    bodySmall: bodySmallStyles,
    bodySmall1X: bodySmall1XStyles,
    bodySmall2X: bodySmall2XStyles,
    bodySmall3X: bodySmall3XStyles,
    lead: leadStyles
};
const Text = /*#__PURE__*/ forwardRef(function Text(props, ref) {
    const { as ='div' , variant , ...otherProps } = props;
    return jsx(Box, Object.assign({
        ref: ref
    }, variant ? variantStyles[variant] : defaultStyles, otherProps, {
        as: as
    }), void 0);
});
function TextLoader(props) {
    return jsx(Skeleton, Object.assign({}, props, {
        animation: "wave"
    }), void 0);
}

export { TextLoader, Text as default };
