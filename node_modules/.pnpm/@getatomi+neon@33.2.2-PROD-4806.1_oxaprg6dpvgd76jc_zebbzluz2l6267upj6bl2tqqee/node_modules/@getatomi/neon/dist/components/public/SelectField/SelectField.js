import { jsxs, jsx } from 'react/jsx-runtime';
import useFormField from '../../private/FormField/FormField.js';
import { StatefulMenu } from '../Menu/Menu.js';
import SelectTrigger from '../SelectTrigger/SelectTrigger.js';
import Box from '../Box/Box.js';
import { popoverPosition } from '../../../utils/popoverPositions.js';

// TODO: Consolidate our Select components and triggers:
// https://hschub.atlassian.net/browse/PROD-3396
function SelectField(props) {
    const { helpText , isDisabled , isRequired , label , onChange , options , secondaryLabel , testHook , value , validationText , errorVariant , ...otherProps } = props;
    const { classnames , containerClassnames , fieldAttributes , fieldLabel , fieldHelpText  } = useFormField({
        label,
        helpText,
        isRequired,
        secondaryLabel,
        testHook,
        validationText,
        errorVariant
    });
    return jsxs(Box, Object.assign({
        className: classnames,
        testHook: testHook
    }, {
        children: [
            fieldLabel,
            jsx(Box, Object.assign({
                className: containerClassnames
            }, {
                children: jsx(StatefulMenu, Object.assign({}, otherProps, fieldAttributes, {
                    isDisabled: isDisabled,
                    itemVariant: "large",
                    trigger: jsx(SelectTrigger, {
                        variant: "borderless"
                    }, void 0),
                    options: options,
                    onChange: onChange,
                    value: value,
                    testHook: testHook && `${testHook}-menu`,
                    popoverPosition: popoverPosition()
                }), void 0)
            }), void 0),
            fieldHelpText
        ]
    }), void 0);
}

export { SelectField as default };
