import { jsx, Fragment, jsxs } from 'react/jsx-runtime';
import { forwardRef, cloneElement } from 'react';
import cx from 'classnames';
import WithIcon from '../../private/WithIcon/WithIcon.js';
import styles from './PostSummary.css.js';

const PostSummary = /*#__PURE__*/ forwardRef(function PostSummary(props, ref) {
    const { dueDate , meta , iconProps , isCompleted , name , progress , testHook , wrapper =jsx(Fragment, {}, void 0) ,  } = props;
    return jsxs("div", Object.assign({
        className: styles.root,
        "data-test": testHook
    }, {
        children: [
            /*#__PURE__*/ cloneElement(wrapper, {}, jsx(WithIcon, Object.assign({
                ref: ref,
                className: styles.wrapper,
                iconProps: iconProps
            }, {
                children: jsxs("div", Object.assign({
                    className: styles.details
                }, {
                    children: [
                        jsxs("div", Object.assign({
                            className: cx(styles.nameAndMeta, isCompleted && styles.isCompleted)
                        }, {
                            children: [
                                jsx("span", Object.assign({
                                    className: styles.name
                                }, {
                                    children: name
                                }), void 0),
                                meta && jsx("span", Object.assign({
                                    className: styles.meta
                                }, {
                                    children: meta
                                }), void 0)
                            ]
                        }), void 0),
                        (meta || dueDate) && jsxs("div", Object.assign({
                            className: styles.metaAndDueDate
                        }, {
                            children: [
                                meta && jsx("span", Object.assign({
                                    className: styles.meta
                                }, {
                                    children: meta
                                }), void 0),
                                meta && dueDate && jsx("span", Object.assign({
                                    className: styles.separator
                                }, {
                                    children: "\u00B7"
                                }), void 0),
                                dueDate
                            ]
                        }), void 0)
                    ]
                }), void 0)
            }), void 0)),
            progress && jsx("div", Object.assign({
                className: styles.progress
            }, {
                children: progress
            }), void 0)
        ]
    }), void 0);
});

export { PostSummary as default };
