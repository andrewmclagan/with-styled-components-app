import { jsx } from 'react/jsx-runtime';
import { cloneElement } from 'react';
import * as ReactIs from 'react-is';
import cx from 'classnames';
import Tippy from '@tippyjs/react';
import styles from './Tooltip.css.js';

function Tooltip(props) {
    const { children , isTextOnly =true , size , ...otherProps } = props;
    return jsx(Tippy, Object.assign({
        animation: "shift-toward",
        arrow: true,
        popperOptions: {
            modifiers: [
                {
                    name: 'flip',
                    options: {
                        fallbackPlacements: [
                            'bottom',
                            'right'
                        ]
                    }
                }, 
            ]
        }
    }, otherProps, {
        className: cx({
            [String(size && styles[size])]: size,
            [styles.isTextOnly]: isTextOnly
        })
    }, {
        children: children && ReactIs.typeOf(children) === ReactIs.Element ? /*#__PURE__*/ cloneElement(children, {
            tabIndex: 0
        }) : children
    }), void 0);
}
Tooltip.defaultProps = {
    theme: 'dark'
};

export { Tooltip as default };
