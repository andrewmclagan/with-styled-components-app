import { jsx, jsxs } from 'react/jsx-runtime';
import Box from '../Box/Box.js';
import HideVisually from '../HideVisually/HideVisually.js';
import Icon from '../Icon/Icon.js';
import Tooltip from '../Tooltip/Tooltip.js';

const assistiveTextsMapping = {
    info: 'More info',
    warning: 'Warning'
};
const iconNamesMapping = {
    info: 'alert-info',
    warning: 'alert-error'
};
function InfoTip(props) {
    const { content , iconSize ='sizeIconSmall1X' , theme ='light-border' , variant ='info' , ...otherProps } = props;
    const assistiveText = assistiveTextsMapping[variant];
    const iconName = iconNamesMapping[variant];
    return jsx(Tooltip, Object.assign({}, otherProps, {
        content: content,
        theme: theme
    }, {
        children: jsxs(Box, Object.assign({
            // Svgs in buttons are cut-off in IOS Safari unless the button has an
            // explicit width. TODO: replace with actual HTML button once iconSizes
            // have been refactored and we can use them as sizing value on the Box
            // (https://hschub.atlassian.net/browse/PROD-4261)
            role: "button",
            tabIndex: 0,
            color: variant === 'warning' ? 'colorTangerineTeaseRoot' : 'colorFiftyShadesLight',
            display: "inline-block",
            height: iconSize,
            lineHeight: iconSize,
            marginLeft: "spacingSmall2X"
        }, {
            children: [
                jsx(HideVisually, {
                    children: assistiveText
                }, void 0),
                jsx(Icon, {
                    name: iconName,
                    size: iconSize,
                    display: "inline-block"
                }, void 0)
            ]
        }), void 0)
    }), void 0);
}

export { InfoTip as default };
