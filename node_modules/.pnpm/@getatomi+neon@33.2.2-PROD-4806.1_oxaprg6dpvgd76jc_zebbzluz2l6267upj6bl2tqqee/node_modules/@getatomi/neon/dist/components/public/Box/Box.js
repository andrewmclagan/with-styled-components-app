import { jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import styled from 'styled-components';
import { shouldForwardProp, compose, customProps } from '../../../utils/systemProps.js';
import { border, color, flexbox, grid, layout, position, space, typography } from 'system-props';

// Using shouldForwardProp to avoid styling props to be passed down to the HTML element
const StyledBox = styled.div.withConfig({
    shouldForwardProp
})(compose(border, color, customProps, flexbox, grid, layout, position, space, typography, {
    boxShadow: {
        property: 'boxShadow',
        scale: 'shadows'
    }
}));
const Box = /*#__PURE__*/ forwardRef(function Box(props, ref) {
    const { children , testHook , vars , ...otherProps } = props;
    return(// @ts-ignore styled-components adds "Non-standard Attribute" "color" of
    // value string | undefined which conflicts
    jsx(StyledBox, Object.assign({}, otherProps, {
        ref: ref,
        style: vars,
        "data-test": testHook
    }, {
        children: children
    }), void 0));
});

export { StyledBox, Box as default };
