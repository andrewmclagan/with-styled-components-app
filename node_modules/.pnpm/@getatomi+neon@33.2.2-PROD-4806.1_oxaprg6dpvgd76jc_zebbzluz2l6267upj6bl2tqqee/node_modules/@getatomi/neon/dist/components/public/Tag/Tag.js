import { jsx } from 'react/jsx-runtime';
import Box from '../Box/Box.js';
import Tooltip from '../Tooltip/Tooltip.js';

const defaultStyles = {
    borderWidth: 'borderWidthRoot',
    borderStyle: 'solid',
    borderColor: 'colorFiftyShadesLighter',
    borderRadius: 'borderRadiusLarge',
    color: 'colorFiftyShadesDarker',
    display: 'inline-block',
    fontFamily: 'fontFamilySystem',
    fontSize: 'fontSizeSmall3X',
    fontWeight: 'fontWeightBold',
    letterSpacing: 'letterSpacingLarge1X',
    lineHeight: 'lineHeightRoot',
    paddingInline: 'spacingSmall1X',
    textAlign: 'center',
    textTransform: 'uppercase'
};
const chunckyStyles = {
    ...defaultStyles,
    borderWidth: 'borderWidthLarge',
    fontWeight: 'fontWeightBold'
};
const dashedStyles = {
    ...defaultStyles,
    borderStyle: 'dashed'
};
const filledStyles = {
    ...defaultStyles,
    color: 'colorFiftyShadesDarkest'
};
const variantStylesMapping = {
    chunky: chunckyStyles,
    dashed: dashedStyles,
    filled: filledStyles
};
function Tag(props) {
    const { children , color , fillColor ='colorCoreWhite' , tooltip , variant  } = props;
    const tag = jsx(Box, Object.assign({
        as: "span"
    }, variant ? variantStylesMapping[variant] : defaultStyles, variant === 'filled' && {
        borderColor: fillColor
    }, color && {
        color
    }, {
        backgroundColor: fillColor,
        tabIndex: tooltip ? 0 : undefined
    }, {
        children: children
    }), void 0);
    return tooltip ? jsx(Tooltip, Object.assign({
        content: tooltip,
        theme: "light-border"
    }, {
        children: tag
    }), void 0) : tag;
}

export { Tag as default, defaultStyles };
