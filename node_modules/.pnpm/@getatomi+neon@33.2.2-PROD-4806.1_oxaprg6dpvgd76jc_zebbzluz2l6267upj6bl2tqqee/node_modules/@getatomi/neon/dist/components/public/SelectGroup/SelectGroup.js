import { jsxs, jsx } from 'react/jsx-runtime';
import flattenChildren from 'react-flatten-children';
import cx from 'classnames';
import useId from '../../../utils/useId.js';
import styles from './SelectGroup.css.js';

function SelectGroup(props) {
    const { children , isConstrained =true , label  } = props;
    const selects = flattenChildren(children);
    const id = useId('SelectGroup');
    return jsxs("div", Object.assign({
        className: cx(styles.root, {
            [styles.isConstrained]: isConstrained
        })
    }, {
        children: [
            label && jsx("span", Object.assign({
                id: id,
                className: styles.label
            }, {
                children: label
            }), void 0),
            jsx("ul", Object.assign({
                className: styles.selects,
                "aria-labelledby": label ? id : undefined
            }, {
                children: selects.map((select, i)=>jsx("li", Object.assign({
                        className: styles.select
                    }, {
                        children: select
                    }), i)
                )
            }), void 0)
        ]
    }), void 0);
}

export { SelectGroup as default };
