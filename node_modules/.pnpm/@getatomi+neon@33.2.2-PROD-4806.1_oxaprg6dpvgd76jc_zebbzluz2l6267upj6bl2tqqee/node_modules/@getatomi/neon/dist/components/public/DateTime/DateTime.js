import { jsxs, jsx } from 'react/jsx-runtime';
import moment from 'moment';
import cx from 'classnames';
import keyMirror from 'keymirror';
import Box from '../Box/Box.js';
import { dateTimeSizes } from '../../../constants/sizes.js';
import styles from './DateTime.css.js';

const dateFormat = 'ddd D MMM';
// https://momentjs.com/docs/#/displaying/calendar-time/
const calendarFormat = {
    sameDay: '[Today]',
    nextDay: '[Tomorrow]',
    lastDay: '[Yesterday]',
    nextWeek: dateFormat,
    lastWeek: dateFormat,
    sameElse: dateFormat
};
const timeFormat = '[at] h a';
keyMirror({
    noWrap: null
});
function DateTime(props) {
    const { prefix , value , size , variant , withStatus =true , testHook  } = props;
    const date = moment(value);
    const dateString = date.calendar(null, calendarFormat);
    const timeString = date.format(timeFormat);
    return jsxs(Box, Object.assign({
        as: "time",
        className: cx(styles.root, {
            [String(size && styles[size])]: size === dateTimeSizes.small,
            [String(variant && styles[variant])]: variant,
            [styles.isOverdue]: withStatus && date.isBefore()
        }),
        dateTime: date.format(),
        testHook: testHook
    }, {
        children: [
            prefix,
            jsx("span", {
                children: dateString
            }, void 0),
            " ",
            jsx("span", {
                children: timeString
            }, void 0)
        ]
    }), void 0);
}

export { DateTime as default };
