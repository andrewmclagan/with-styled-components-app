import { jsxs, jsx } from 'react/jsx-runtime';
import cx from 'classnames';
import keyMirror from 'keymirror';
import Icon from '../../Icon/Icon.js';
import styles from './CloseButton.css.js';

const variants = keyMirror({
    minimal: 'null'
});
function CloseButton(props) {
    const { className , label , onClick , testHook , variant  } = props;
    const isMinimalVariant = variant === variants.minimal;
    return jsxs("button", Object.assign({
        type: "button",
        onClick: onClick,
        className: cx(styles.root, className, variant && styles[variant]),
        "data-test": testHook
    }, {
        children: [
            !isMinimalVariant && jsx("span", Object.assign({
                className: styles.label
            }, {
                children: label
            }), void 0),
            jsx("span", Object.assign({
                className: styles.circle
            }, {
                children: jsx(Icon, {
                    className: styles.icon,
                    name: "close",
                    size: {
                        base: 'sizeIconSmall1X',
                        tablet: isMinimalVariant ? 'sizeIconSmall' : 'sizeIconRoot'
                    },
                    strokeWidth: isMinimalVariant ? {
                        base: undefined,
                        tablet: 2
                    } : undefined,
                    isDecorative: !isMinimalVariant,
                    title: isMinimalVariant ? label : undefined
                }, void 0)
            }), void 0)
        ]
    }), void 0);
}

export { CloseButton as default, variants };
