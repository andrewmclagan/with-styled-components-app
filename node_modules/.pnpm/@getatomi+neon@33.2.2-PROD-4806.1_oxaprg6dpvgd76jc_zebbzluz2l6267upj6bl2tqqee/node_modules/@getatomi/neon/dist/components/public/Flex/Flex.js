import { jsx } from 'react/jsx-runtime';
import { forwardRef } from 'react';
import _ from 'lodash';
import Box from '../Box/Box.js';

const getFlexWrapValue = (value)=>{
    if (typeof value === 'boolean') {
        return value ? 'wrap' : 'nowrap';
    }
    return value;
};
const getFlexWrap = (wrap)=>{
    if (_.isObject(wrap)) {
        return _.mapValues(wrap, getFlexWrapValue);
    }
    return getFlexWrapValue(wrap);
};
const Flex = /*#__PURE__*/ forwardRef(function Flex(props, ref) {
    const { basis , children , direction , display ='flex' , gap , grow , shrink , wrap , ...otherProps } = props;
    return jsx(Box, Object.assign({
        ref: ref
    }, otherProps, {
        display: display,
        flexBasis: basis,
        flexDirection: direction,
        flexGrow: grow,
        flexShrink: shrink,
        flexWrap: getFlexWrap(wrap),
        gap: gap
    }, {
        children: children
    }), void 0);
});

export { Flex as default };
