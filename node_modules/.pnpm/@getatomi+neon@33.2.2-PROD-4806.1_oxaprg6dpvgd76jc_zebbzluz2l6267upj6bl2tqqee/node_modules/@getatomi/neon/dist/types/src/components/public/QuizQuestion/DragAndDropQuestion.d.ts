/// <reference types="react" />
import { UniqueIdentifier } from '@dnd-kit/core';
import { QuizQuestionProps } from './QuizQuestion';
import { DragAndDropAnswer } from './DragAndDropQuestionContext';
export declare type DragAndDropQuestionProps = QuizQuestionProps & {
    answerMaxLength?: number;
    answerMaxLengthInfo?: string;
    answersBankId: string;
    assistiveTexts: {
        bankAssistiveText: string;
        blankAssistiveText: string;
        draggableAssistiveText: string;
        getCorrectAnswerAssistiveText: (userAnswer: string) => string;
        getIncorrectAnswerAssistiveText: (userAnswer: string, correctAnswer: string) => string;
        getOnDragCancelAssistiveText: (id: string) => string;
        getOnDragEndAssistiveText: (overTitle: string, overId: UniqueIdentifier, countCorrectAnswers: number) => string;
        getOnDragOverAssistiveText: (overTitle: string, overId: UniqueIdentifier, countCorrectAnswers: number) => string;
        getOnDragStartAssistiveText: (id: string) => string;
    };
    incorrectAnswers: ReadonlyArray<string> | null | undefined;
    initialAnswers?: ReadonlyArray<string>;
    isCheckingAnswers?: boolean;
    isPreviewingAnswers?: boolean;
    isSkipped?: boolean;
    onAnswersChange?: (arg0: Array<DragAndDropAnswer>) => void;
    onDragEnd?: () => void;
    onDragStart?: () => void;
    title: string;
};
export default function DragAndDropQuestion(props: DragAndDropQuestionProps): JSX.Element;
