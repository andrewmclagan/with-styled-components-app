import { CSSProperties } from 'react';
import { BorderRadii, ResponsiveValue, Spacing, Sizing } from '../../../utils/systemProps';
declare const animations: {
    readonly wave: "wave";
};
export declare type SkeletonStyleProps = {
    borderRadius?: ResponsiveValue<BorderRadii>;
    height?: ResponsiveValue<Sizing | number | string>;
    marginInline?: ResponsiveValue<Spacing | 'auto'>;
    maxHeight?: ResponsiveValue<Sizing | number | string>;
    maxWidth?: ResponsiveValue<Sizing | number | string>;
    minHeight?: ResponsiveValue<Sizing | number | string>;
    minWidth?: ResponsiveValue<Sizing | number | string>;
    position?: CSSProperties['position'];
    size?: ResponsiveValue<Sizing | number | string>;
    width?: ResponsiveValue<Sizing | number | string>;
};
export declare type PseudoSystemProps = {
    _after?: CSSProperties;
    _before?: CSSProperties;
};
export declare type SkeletonProps = SkeletonStyleProps & PseudoSystemProps & {
    animation?: keyof typeof animations;
    testHook?: string;
};
export declare const StyledSkeleton: import("styled-components").StyledComponent<"div", any, SkeletonStyleProps & PseudoSystemProps & {
    animation?: "wave" | undefined;
    testHook?: string | undefined;
} & {
    backgroundColor: 'colorFiftyShadesLightest';
    overflow: 'hidden';
}, never>;
export default function Skeleton(props: SkeletonProps): JSX.Element;
export {};
