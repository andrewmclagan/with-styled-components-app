import { useMediaQuery } from 'react-responsive';
import json2mq from 'json2mq';
import { ReactElement } from 'react';
export declare function useMedia(...args: Parameters<typeof useMediaQuery>): boolean;
export declare type MediaProps<ET extends keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>> = {
    element: ReactElement<ET> | null;
    queries: Record<string, React.ComponentProps<ET>>;
};
declare function Media<ET extends keyof JSX.IntrinsicElements | React.JSXElementConstructor<any>>(props: MediaProps<ET>): JSX.Element;
declare namespace Media {
    var query: typeof json2mq;
    var Any: import("react").ComponentType<any>;
    var Context: import("react").Context<Partial<import("react-responsive").MediaQueryAllQueryable>>;
}
export default Media;
