import { ComponentProps, ReactElement, ReactNode } from 'react';
import { SelectProps } from '../../../components/public/Select/Select';
import { QuizQuestionProps } from './QuizQuestion';
declare type CheckButtonProps = {
    backLabel: string;
    checkLabel: string;
    isChecking?: boolean;
    isReversed?: boolean;
    onClick: () => void;
    testHook?: string;
};
declare function CheckButton(props: CheckButtonProps): JSX.Element;
export declare type SelfMarkedQuestionProps = QuizQuestionProps & {
    checkButtonProps: JSX.LibraryManagedAttributes<typeof CheckButton, ComponentProps<typeof CheckButton>>;
    guidelines: string;
    isChecking: boolean;
    marks: number;
    renderMarks: (arg0: ReactNode) => ReactNode;
};
export declare function SelfMarkedQuestion(props: SelfMarkedQuestionProps): JSX.Element;
export declare type Props = Omit<SelfMarkedQuestionProps, 'checkButtonProps' | 'isChecking'> & {
    backLabel: ComponentProps<typeof CheckButton>['backLabel'];
    checkLabel: ComponentProps<typeof CheckButton>['checkLabel'];
    onSubmit: SelectProps['onChange'];
    selectLabel: string;
    selectOptions: SelectProps['options'];
    submitText: string;
};
export default function useSelfMarkedQuestion(props: Props): {
    footer: [ReactElement, ReactElement] | undefined;
    question: ReactElement<typeof SelfMarkedQuestion> | null;
};
export {};
