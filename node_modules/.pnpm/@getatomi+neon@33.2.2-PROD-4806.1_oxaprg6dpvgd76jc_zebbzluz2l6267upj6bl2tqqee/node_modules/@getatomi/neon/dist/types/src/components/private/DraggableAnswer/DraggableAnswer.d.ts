import { ReactNode } from 'react';
export declare const variants: {
    readonly correct: "correct";
    readonly draggable: "draggable";
    readonly dropped: "dropped";
    readonly incorrect: "incorrect";
    readonly skipped: "skipped";
    readonly warning: "warning";
};
export declare type DraggableAnswerProps = {
    children: ReactNode;
    info?: ReactNode;
    isDisabled?: boolean;
    isDragged?: boolean;
    onRemove?: () => void;
    testHook?: string;
    variant?: keyof typeof variants;
};
declare function DraggableAnswer(props: DraggableAnswerProps): JSX.Element;
declare namespace DraggableAnswer {
    var Droppable: import("react").ForwardRefExoticComponent<DroppableProps & import("react").RefAttributes<HTMLSpanElement>>;
}
export default DraggableAnswer;
export declare type DroppableProps = {
    assistiveText?: string;
    children: ReactNode;
    isFilled?: boolean;
    isIncorrect?: boolean;
    isOver?: boolean;
    testHook?: string;
};
export declare const Droppable: import("react").ForwardRefExoticComponent<DroppableProps & import("react").RefAttributes<HTMLSpanElement>>;
