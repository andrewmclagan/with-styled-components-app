import { ReactNode } from 'react';
import { IconProps } from '../../../components/public/Icon/Icon';
import { LinkProps } from '../../../components/private/Link/Link';
declare type AttachmentProps = {
    children: ReactNode;
    isFullWidth?: boolean;
    isTruncated?: boolean;
    onRemove?: () => void;
    removeAssistiveText?: string;
    testHook?: string;
    validationTextId?: string;
};
export declare function Attachment(props: AttachmentProps): JSX.Element;
export declare type AttachmentListProps = {
    children: ReactNode;
    testHook?: string;
};
declare function AttachmentList(props: AttachmentListProps): JSX.Element;
declare namespace AttachmentList {
    var Attachment: typeof import("./AttachmentList").Attachment;
    var ExternalContent: (props: {
        iconProps: IconProps;
        isDisabled?: boolean | undefined;
        linkProps: Omit<LinkProps, "children">;
        meta: string;
        name: string;
        testHook?: string | undefined;
    }) => JSX.Element;
    var Loader: () => JSX.Element;
}
export default AttachmentList;
