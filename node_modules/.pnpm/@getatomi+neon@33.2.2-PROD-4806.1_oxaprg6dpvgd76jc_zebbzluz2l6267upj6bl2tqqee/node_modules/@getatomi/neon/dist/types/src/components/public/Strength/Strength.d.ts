import { Ref } from 'react';
import { StrengthTuple } from '../../../utils/strength';
import { strengthSizes } from '../../../constants/sizes';
import { Value as ColorValue } from '../../../constants/tokens/colors.types';
import { TooltipProps } from '../../../components/public/Tooltip/Tooltip';
export declare type StrengthProps = {
    assistiveText?: string;
    color?: ColorValue;
    innerRef?: Ref<HTMLDivElement>;
    isAnimated?: boolean;
    isDanger?: boolean;
    isInline?: boolean;
    labels?: [string, string, string, string, string];
    limits?: StrengthTuple<number>;
    size?: keyof typeof strengthSizes;
    testHook?: string;
    tooltipProps?: Omit<TooltipProps, 'children'>;
    value: number;
};
declare const Strength: import("react").ForwardRefExoticComponent<StrengthProps & import("react").RefAttributes<HTMLDivElement>>;
export default Strength;
