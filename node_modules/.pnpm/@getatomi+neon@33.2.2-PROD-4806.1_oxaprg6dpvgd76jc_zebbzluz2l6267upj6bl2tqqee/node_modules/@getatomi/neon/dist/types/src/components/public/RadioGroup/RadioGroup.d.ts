import { ReactNode } from 'react';
import { AriaRadioGroupProps } from '@react-aria/radio';
export declare type RadioGroupProps = Pick<AriaRadioGroupProps, 'defaultValue' | 'isDisabled' | 'isReadOnly' | 'label' | 'name' | 'onChange' | 'orientation' | 'value'> & {
    ariaLabel?: string;
    ariaLabelledBy?: string;
    children: ReactNode;
    /**
     * Use in combination with `validationText` to display validation errors.
     */
    errorVariant?: 'error';
    helpText?: ReactNode;
    /**
     * Secondary label most commonly used for optional form fields.
     */
    secondaryLabel?: ReactNode;
    /**
     * A validation message for the field.
     */
    validationText?: string;
};
declare const RadioGroup: import("react").ForwardRefExoticComponent<Pick<AriaRadioGroupProps, "label" | "defaultValue" | "value" | "name" | "onChange" | "orientation" | "isDisabled" | "isReadOnly"> & {
    ariaLabel?: string | undefined;
    ariaLabelledBy?: string | undefined;
    children: ReactNode;
    /**
     * Use in combination with `validationText` to display validation errors.
     */
    errorVariant?: "error" | undefined;
    helpText?: ReactNode;
    /**
     * Secondary label most commonly used for optional form fields.
     */
    secondaryLabel?: ReactNode;
    /**
     * A validation message for the field.
     */
    validationText?: string | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export default RadioGroup;
export * from './Radio';
