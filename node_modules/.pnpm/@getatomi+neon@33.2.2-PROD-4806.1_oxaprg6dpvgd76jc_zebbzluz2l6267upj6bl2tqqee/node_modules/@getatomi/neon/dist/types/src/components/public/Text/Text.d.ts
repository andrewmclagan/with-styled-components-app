/// <reference types="react" />
import { BoxProps } from '../../../components/public/Box/Box';
import { SkeletonProps } from '../../../components/public/Skeleton/Skeleton';
export declare const variants: {
    readonly bodyLarge: "bodyLarge";
    readonly bodyRoot: "bodyRoot";
    readonly bodySmall: "bodySmall";
    readonly bodySmall1X: "bodySmall1X";
    readonly bodySmall2X: "bodySmall2X";
    readonly bodySmall3X: "bodySmall3X";
    readonly lead: "lead";
};
export declare type TextProps = Pick<BoxProps, 'as' | 'children' | 'color' | 'fontFamily' | 'fontSize' | 'fontWeight' | 'id' | 'letterSpacing' | 'lineHeight' | 'margin' | 'marginBlock' | 'marginBottom' | 'marginInline' | 'marginLeft' | 'marginRight' | 'marginTop' | 'overflow' | 'padding' | 'paddingBlock' | 'paddingBottom' | 'paddingInline' | 'paddingLeft' | 'paddingRight' | 'paddingTop' | 'testHook' | 'textAlign' | 'textDecoration' | 'textIndent' | 'textTransform' | 'whiteSpace'> & {
    variant?: keyof typeof variants;
};
declare const Text: import("react").ForwardRefExoticComponent<Pick<BoxProps, "id" | "testHook" | "children" | "as" | "color" | "fontFamily" | "fontSize" | "fontWeight" | "letterSpacing" | "lineHeight" | "marginBlock" | "marginBottom" | "marginInline" | "marginLeft" | "marginRight" | "marginTop" | "paddingBlock" | "paddingBottom" | "paddingInline" | "paddingLeft" | "paddingRight" | "paddingTop" | "textAlign" | "textIndent" | "textTransform" | "whiteSpace" | "margin" | "overflow" | "padding" | "textDecoration"> & {
    variant?: "bodyLarge" | "bodyRoot" | "bodySmall" | "bodySmall1X" | "bodySmall2X" | "bodySmall3X" | "lead" | undefined;
} & import("react").RefAttributes<HTMLElement>>;
export default Text;
export declare type TextLoaderProps = Omit<SkeletonProps, 'animation'>;
export declare function TextLoader(props: TextLoaderProps): JSX.Element;
