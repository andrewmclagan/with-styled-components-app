/// <reference types="react" />
import { BoxProps } from '../../../components/public/Box/Box';
import { sizingsIcon } from '../../../constants/tokens/sizingsIcon';
import { ResponsiveValue } from '../../../utils/systemProps';
import svgs from '../../../components/public/Icon/svgs';
export declare type IconName = keyof typeof svgs;
export declare type IconProps = Pick<BoxProps, 'color' | 'display' | 'strokeWidth' | 'testHook' | 'verticalAlign'> & {
    /**
     * Deprecated: do not use that prop to add/overwrite styles to the Icon. It will be removed once it is not needed internally anymore.
     */
    className?: string;
    isDecorative?: boolean;
    name: IconName;
    size?: ResponsiveValue<keyof typeof sizingsIcon>;
    /**
     * The accessibility text read when screen readers gets to the icon.
     */
    title?: string;
};
declare const Icon: import("react").ForwardRefExoticComponent<Pick<BoxProps, "testHook" | "color" | "display" | "verticalAlign" | "strokeWidth"> & {
    /**
     * Deprecated: do not use that prop to add/overwrite styles to the Icon. It will be removed once it is not needed internally anymore.
     */
    className?: string | undefined;
    isDecorative?: boolean | undefined;
    name: IconName;
    size?: ResponsiveValue<"sizeIconSmall3X" | "sizeIconSmall2X" | "sizeIconSmall1X" | "sizeIconSmall" | "sizeIconRoot" | "sizeIconLarge" | "sizeIconLarge1X" | "sizeIconLarge2X" | "sizeIconLarge3X" | "sizeIconLarge4X"> | undefined;
    /**
     * The accessibility text read when screen readers gets to the icon.
     */
    title?: string | undefined;
} & import("react").RefAttributes<HTMLElement>>;
export default Icon;
