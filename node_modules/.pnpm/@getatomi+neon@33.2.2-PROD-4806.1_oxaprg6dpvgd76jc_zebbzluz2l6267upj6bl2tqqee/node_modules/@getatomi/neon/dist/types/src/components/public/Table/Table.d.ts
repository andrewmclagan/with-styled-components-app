import { ReactNode, CSSProperties } from 'react';
import { RowData, SortingState, TableOptions } from '@tanstack/react-table';
import { PaginationProps } from '../../../components/private/Pagination/Pagination';
declare module '@tanstack/react-table' {
    interface ColumnMeta<TData extends RowData, TValue> {
        isCenterAligned?: boolean;
        isEndAligned?: boolean;
        isHeading?: boolean;
        loader?: ReactNode;
        style?: CSSProperties;
    }
}
export declare type TableProps<TData> = Pick<TableOptions<TData>, 'columns' | 'pageCount'> & {
    children?: ReactNode;
    data: Array<TData>;
    fetchData?: (args: {
        pageIndex: number;
        pageSize: number;
    }) => void;
    indexAssistiveText?: string;
    initialState?: {
        pageIndex?: number;
        pageSize?: number;
        sortBy?: SortingState;
    };
    isFixedLayout?: boolean;
    isLoading?: boolean;
    isSortable?: boolean;
    isStickyHeadings?: boolean;
    paginationLabels?: PaginationProps['labels'];
    renderIndex?: (index: number) => string;
    renderPageLabel?: PaginationProps['renderPageLabel'];
    renderPageSize?: PaginationProps['renderPageSize'];
    scrollPosition?: {
        left: number;
        top: number;
    };
    sortingAssistiveText?: string;
    testHook?: string;
    toggleSortBy?: (args: SortingState) => void;
};
declare type RequiredBaseDataType = {
    isInactive?: boolean;
    isSelected?: boolean;
};
declare function Table<TData>(props: TableProps<TData & RequiredBaseDataType>): JSX.Element;
declare namespace Table {
    var createColumnHelper: typeof import("@tanstack/table-core").createColumnHelper;
}
export default Table;
