import { DetailedHTMLFactory, ReactHTML } from 'react';
declare type getType<T> = T extends DetailedHTMLFactory<infer U, any> ? U : never;
export declare type containerAttributes = {
    [E in keyof typeof containerElements]: getType<ReactHTML[E]>;
};
export declare type formAttributes = {
    [E in keyof typeof formElements]: getType<ReactHTML[E]>;
};
export declare type inputAttributes = {
    [E in keyof typeof inputElements]: getType<ReactHTML[E]>;
};
export declare type interactiveAttributes = {
    [E in keyof typeof interactiveElements]: getType<ReactHTML[E]>;
};
export declare type textAttributes = {
    [E in keyof typeof textElements]: getType<ReactHTML[E]>;
};
export declare type progressAttributes = {
    [E in keyof typeof progressElements]: getType<ReactHTML[E]>;
};
export declare const containerElements: {
    article: "article";
    div: "div";
    p: "p";
    section: "section";
    span: "span";
};
export declare const formElements: {
    label: "label";
    fieldset: "fieldset";
};
export declare const inputElements: {
    input: "input";
    textarea: "textarea";
};
export declare const interactiveElements: {
    a: "a";
    button: "button";
};
export declare const textElements: {
    div: "div";
    p: "p";
    small: "small";
    span: "span";
};
export declare const progressElements: {
    meter: "meter";
    progress: "progress";
};
export {};
