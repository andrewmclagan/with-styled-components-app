import { CSSProperties } from 'react';
import { ResponsiveValue } from '../../../utils/systemProps';
import { BoxProps } from '../../../components/public/Box/Box';
declare type FlexWrap = boolean | CSSProperties['flexWrap'];
declare type ResponsiveFlexWrap = ResponsiveValue<FlexWrap>;
export declare type FlexProps = Pick<BoxProps, 'alignContent' | 'alignItems' | 'alignSelf' | 'as' | 'children' | 'columnGap' | 'gap' | 'height' | 'justifyContent' | 'justifySelf' | 'margin' | 'marginBlock' | 'marginBottom' | 'marginInline' | 'marginLeft' | 'marginRight' | 'marginTop' | 'maxHeight' | 'maxWidth' | 'minHeight' | 'minWidth' | 'padding' | 'paddingBlock' | 'paddingBottom' | 'paddingInline' | 'paddingLeft' | 'paddingRight' | 'paddingTop' | 'order' | 'rowGap' | 'size' | 'testHook' | 'width'> & {
    basis?: ResponsiveValue<CSSProperties['flexBasis']>;
    direction?: ResponsiveValue<CSSProperties['flexDirection']>;
    display?: ResponsiveValue<'flex' | 'inline-flex'>;
    grow?: ResponsiveValue<CSSProperties['flexGrow']>;
    shrink?: ResponsiveValue<CSSProperties['flexShrink']>;
    wrap?: ResponsiveFlexWrap;
};
declare const Flex: import("react").ForwardRefExoticComponent<Pick<BoxProps, "size" | "testHook" | "children" | "as" | "columnGap" | "alignContent" | "alignItems" | "alignSelf" | "height" | "justifyContent" | "justifySelf" | "marginBlock" | "marginBottom" | "marginInline" | "marginLeft" | "marginRight" | "marginTop" | "maxHeight" | "maxWidth" | "minHeight" | "minWidth" | "order" | "paddingBlock" | "paddingBottom" | "paddingInline" | "paddingLeft" | "paddingRight" | "paddingTop" | "rowGap" | "width" | "gap" | "margin" | "padding"> & {
    basis?: ResponsiveValue<CSSProperties['flexBasis']>;
    direction?: ResponsiveValue<CSSProperties['flexDirection']>;
    display?: ResponsiveValue<"flex" | "inline-flex"> | undefined;
    grow?: ResponsiveValue<CSSProperties['flexGrow']>;
    shrink?: ResponsiveValue<CSSProperties['flexShrink']>;
    wrap?: ResponsiveFlexWrap;
} & import("react").RefAttributes<HTMLElement>>;
export default Flex;
