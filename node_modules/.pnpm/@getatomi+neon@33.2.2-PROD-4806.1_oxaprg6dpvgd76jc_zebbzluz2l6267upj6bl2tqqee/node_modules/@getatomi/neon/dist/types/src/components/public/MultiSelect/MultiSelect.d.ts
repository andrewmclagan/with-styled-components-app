import { ReactElement } from 'react';
import { Position } from '@reach/popover';
import { ButtonProps } from '../../../components/public/Button/Button';
import { CheckboxProps } from '../../../components/public/Checkbox/Checkbox';
import { DrawerProps } from '../../../components/public/Drawer/Drawer';
import SelectTrigger from '../../../components/public/SelectTrigger/SelectTrigger';
export declare type Option = Pick<CheckboxProps, 'checked' | 'isDisabled' | 'label'> & {
    readonly value: string;
};
export declare type MultiSelectProps = {
    ariaLabel: string;
    checkAllLabel: CheckboxProps['label'];
    doneLabel: string;
    drawerProps?: Omit<DrawerProps, 'ariaLabel' | 'children' | 'isOpen' | 'onClose'>;
    id?: string;
    isDisabled?: boolean;
    onChange: (values: Array<Option>) => void;
    onClose?: (values: Array<Option>) => void;
    options: ReadonlyArray<Option>;
    popoverPosition?: Position;
    searchEmptyState: string;
    searchPlaceholder: string;
    testHook?: string;
    trigger: ReactElement;
    uncheckAllLabel: ButtonProps['children'];
};
declare function MultiSelect(props: MultiSelectProps): JSX.Element;
declare namespace MultiSelect {
    var Trigger: typeof SelectTrigger;
}
export default MultiSelect;
