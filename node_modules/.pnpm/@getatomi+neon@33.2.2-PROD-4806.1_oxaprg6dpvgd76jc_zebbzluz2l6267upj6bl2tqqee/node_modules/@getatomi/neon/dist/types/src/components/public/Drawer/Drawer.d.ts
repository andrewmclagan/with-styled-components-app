import { CSSProperties, ReactNode } from 'react';
import '@reach/dialog/styles.css';
export declare const variants: {
    fullHeight: "fullHeight";
    noMaxHeight: "noMaxHeight";
};
declare type CloseButtonProps = {
    onClick: () => void;
    testHook?: string;
};
declare const allowedItemElements: {
    button: "button";
    div: "div";
    li: "li";
};
declare type Elements = HTMLButtonElement | HTMLLIElement | HTMLDivElement;
declare type ItemProps = {
    children: ReactNode;
    element?: keyof typeof allowedItemElements;
    fadedOut?: boolean;
    onClick?: () => void;
    role?: 'menuitem' | 'menuitemcheckbox' | null;
    style?: CSSProperties;
    testHook?: string;
    withSeparator?: boolean;
};
export declare type DrawerProps = {
    ariaLabel?: string;
    children: ReactNode;
    footer?: ReactNode;
    header?: ReactNode;
    isOpen: boolean;
    onClose?: () => void;
    onOpen?: () => void;
    testHook?: string;
    variant?: keyof typeof variants;
};
declare function Drawer(props: DrawerProps): JSX.Element;
declare namespace Drawer {
    var Header: (props: {
        children: ReactNode;
    }) => JSX.Element;
    var Footer: (props: {
        children: ReactNode;
    }) => JSX.Element;
    var CloseButton: (props: CloseButtonProps) => JSX.Element;
    var Content: (props: {
        children: ReactNode;
        withPadding?: boolean | undefined;
    }) => JSX.Element;
    var Item: import("react").ForwardRefExoticComponent<ItemProps & import("react").RefAttributes<Elements>>;
}
export default Drawer;
