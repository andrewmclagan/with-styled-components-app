import { ComponentProps, ReactNode } from 'react';
import Button from '../../../components/public/Button/Button';
import Container from '../../../components/public/Container/Container';
import ProgressBar from '../../../components/public/ProgressBar/ProgressBar';
export declare type QuizDialogProps = {
    appElement: HTMLElement;
    ariaLabel: string;
    children: ReactNode;
    closeAssistiveText: string;
    containerProps?: Partial<JSX.LibraryManagedAttributes<typeof Container, ComponentProps<typeof Container>>>;
    footer?: [ReactNode, ReactNode];
    isOpen: boolean;
    /**
     * The dialog body is scrollable by default. Use this prop to prevent the body
     * from scrolling, for example for a self-marked question which creates its
     * own scrollable content.
     */
    isScrollable?: boolean;
    onClose: () => void;
    progressProps: ComponentProps<typeof ProgressBar>;
    shouldCloseOnEsc?: boolean;
    skipProps: ComponentProps<typeof Button>;
};
declare function QuizDialog(props: QuizDialogProps): JSX.Element;
declare namespace QuizDialog {
    var Validation: typeof import("./QuizDialog").Validation;
}
export declare type ValidationProps = {
    children: ReactNode;
    explanationId: string;
    headingId: string;
    isOpen: boolean;
};
export declare function Validation(props: ValidationProps): JSX.Element;
export default QuizDialog;
