import { Properties } from 'csstype';
import { background, border, color, flexbox, grid, layout, position, shadow, space, transition, typography, PropConfigCollection } from 'system-props';
import { themeBreakpoints } from '../constants/tokens/breakpoints';
import { borderRadii } from '../constants/tokens/borderRadii';
import { borderWidths } from '../constants/tokens/borderWidths';
import { boxShadows } from '../constants/tokens/boxShadows';
import { colors } from '../constants/tokens/colors';
import { fontFamilies } from '../constants/tokens/fontFamilies';
import { fontSizes } from '../constants/tokens/fontSizes';
import { fontWeights } from '../constants/tokens/fontWeights';
import { letterSpacings } from '../constants/tokens/letterSpacings';
import { lineHeights } from '../constants/tokens/lineHeights';
import { spacing } from '../constants/tokens/spacing';
import { sizings } from '../constants/tokens/sizings';
import { sizingsAvatar } from '../constants/tokens/sizingsAvatar';
import { transitions } from '../constants/tokens/transitions';
import { zIndexes } from '../constants/tokens/zIndexes';
import { sizingsIcon } from '../constants/tokens/sizingsIcon';
export type { Properties as CSSProperties };
export declare type BorderRadii = keyof typeof borderRadii;
export declare type BorderWidth = keyof typeof borderWidths;
export declare type BoxShadow = keyof typeof boxShadows;
export declare type Color = keyof typeof colors;
export declare type FontFamily = keyof typeof fontFamilies;
export declare type FontSize = keyof typeof fontSizes;
export declare type FontWeight = keyof typeof fontWeights;
export declare type LetterSpacing = keyof typeof letterSpacings;
export declare type LineHeight = keyof typeof lineHeights | keyof typeof sizingsAvatar | keyof typeof sizingsIcon;
export declare type Spacing = keyof typeof spacing;
export declare type Sizing = keyof typeof sizings | 'auto';
export declare type Transition = keyof typeof transitions;
export declare type ZIndexes = keyof typeof zIndexes;
export declare type ResponsiveValue<T> = T | {
    [key in keyof typeof themeBreakpoints | 'base']?: T;
};
declare const customProps: PropConfigCollection;
export declare type PseudoSelectors = keyof typeof pseudoSelectors;
declare const pseudoSelectors: {
    _title: string;
    _activeEnabled: string;
    _hover: string;
    _focus: string;
    _focusWithin: string;
    _focusVisible: string;
    _active: string;
    _visited: string;
    _selection: string;
    _before: string;
    _after: string;
    _placeholder: string;
    _hoverAndFocus: string;
    _disabled: string;
    _readOnly: string;
    _first: string;
    _last: string;
    _notFirst: string;
    _notLast: string;
    _checked: string;
    _odd: string;
    _even: string;
};
declare const shouldForwardProp: (prop: string) => boolean;
declare const system: (arg: PropConfigCollection) => import("system-props/dist/core/createSystem").Parser;
export declare function compose(...configurations: Array<PropConfigCollection>): import("system-props/dist/core/createSystem").Parser;
export { shouldForwardProp, system, background, border, color, customProps, flexbox, grid, layout, position, shadow, space, transition, typography, };
