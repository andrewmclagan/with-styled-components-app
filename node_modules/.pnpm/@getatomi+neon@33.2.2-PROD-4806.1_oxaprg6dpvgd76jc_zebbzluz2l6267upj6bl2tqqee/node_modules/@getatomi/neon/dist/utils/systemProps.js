import 'core-js/modules/web.dom-collections.iterator.js';
import { pseudoSelectors as pseudoSelectors$1, createSystem, shouldForwardProp as shouldForwardProp$1 } from 'system-props';
export { background, border, color, flexbox, grid, layout, position, shadow, space, transition, typography } from 'system-props';

// Custom prop configurations not included in system-props
const customProps = {
    appearance: true,
    aspectRatio: true,
    columnGap: {
        property: 'columnGap',
        scale: 'space'
    },
    content: true,
    cursor: true,
    gap: {
        property: 'gap',
        scale: 'space'
    },
    marginBlock: {
        properties: [
            'marginTop',
            'marginBottom'
        ],
        scale: 'space'
    },
    marginInline: {
        properties: [
            'marginLeft',
            'marginRight'
        ],
        scale: 'space'
    },
    outlineColor: {
        property: 'outlineColor',
        scale: 'colors'
    },
    outlineOffset: {
        property: 'outlineOffset',
        scale: 'space'
    },
    outlineStyle: true,
    outlineWidth: {
        property: 'outlineWidth',
        scale: 'borderWidths'
    },
    paddingBlock: {
        properties: [
            'paddingTop',
            'paddingBottom'
        ],
        scale: 'space'
    },
    paddingInline: {
        properties: [
            'paddingLeft',
            'paddingRight'
        ],
        scale: 'space'
    },
    resize: true,
    rowGap: {
        property: 'rowGap',
        scale: 'space'
    },
    strokeWidth: true,
    textDecoration: true,
    textDecorationColor: true,
    textDecorationThickness: true,
    textIndent: {
        property: 'textIndent',
        scale: 'letterSpacings'
    },
    textOverflow: true,
    textTransform: true,
    transition: {
        property: 'transition',
        scale: 'transitions'
    },
    transform: true,
    visibility: true,
    whiteSpace: true
};
const customPseudoSelectors = {
    _title: '&[title]',
    _activeEnabled: '&:active:enabled'
};
const pseudoSelectors = {
    ...pseudoSelectors$1,
    ...customPseudoSelectors
};
// Custom shouldForwardProp function to filter out custom props so that they are
// not passed to the DOM
const shouldForwardProp = (prop)=>!Object.keys({
        ...customProps,
        ...customPseudoSelectors
    }).includes(prop) && shouldForwardProp$1(prop)
;
// Configure our system props
// https://system-props.com/docs/api-system
const system = createSystem({
    tokenPrefix: 'noprefix',
    pseudoSelectors
});
// Utility function to easily compose prop configurations
//  https://system-props.com/docs/api-prop-configurations
function compose() {
    for(var _len = arguments.length, configurations = new Array(_len), _key = 0; _key < _len; _key++){
        configurations[_key] = arguments[_key];
    }
    return system(Object.assign({}, ...configurations));
}

export { compose, customProps, shouldForwardProp, system };
