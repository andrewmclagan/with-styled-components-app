import 'core-js/modules/web.dom-collections.iterator.js';
import { useRef, useState, useEffect } from 'react';

function useScroll() {
    const targetRef = useRef(null);
    const [scrollTop, setScrollTop] = useState(0);
    const [isScrollable, setIsScrollable] = useState(!!(targetRef.current && targetRef.current.scrollHeight > targetRef.current.clientHeight));
    const [isEnd, setIsEnd] = useState(false);
    // eslint-disable-next-line react-hooks/exhaustive-deps
    useEffect(()=>{
        // the element might not be in the DOM yet
        if (!targetRef.current) return;
        const target = targetRef.current;
        setIsScrollable(target.scrollHeight > target.clientHeight);
        setIsEnd(scrollTop + target.clientHeight === target.scrollHeight);
    });
    const onScroll = (event)=>setScrollTop(event.currentTarget.scrollTop)
    ;
    return [
        {
            isScrollable,
            isEnd
        },
        {
            ref: targetRef,
            onScroll
        }, 
    ];
}

export { useScroll as default };
