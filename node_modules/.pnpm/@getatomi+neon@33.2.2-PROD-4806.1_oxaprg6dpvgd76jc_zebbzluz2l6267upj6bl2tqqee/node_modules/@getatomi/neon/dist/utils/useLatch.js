import { useRef, useEffect } from 'react';

function useLatch(param) {
    let { value , onChange ,  } = param;
    const wasOn = useRef(false);
    // Don't change this effect before you understand the limitations of other
    // implementations! See this link for more info
    // https://codesandbox.io/s/isopen-onopen-onclose-6pepx
    useEffect(()=>{
        if (!wasOn.current && value) {
            wasOn.current = true;
            onChange(true);
        }
        if (wasOn.current && !value) {
            wasOn.current = false;
            onChange(false);
        }
    }, [
        value
    ]); // eslint-disable-line react-hooks/exhaustive-deps
}

export { useLatch as default };
