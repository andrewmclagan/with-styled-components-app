{"version":3,"file":"system-props.modern.js","sources":["../src/props/background/index.ts","../src/props/tokenizeValue.ts","../src/props/border/borderShorthandTransform.ts","../src/props/border/index.ts","../src/props/color/index.ts","../src/props/flexbox/index.ts","../src/props/grid/index.ts","../src/props/layout/index.ts","../src/props/positiveOrNegative.ts","../src/props/position/index.ts","../src/props/shadow/getShadow.ts","../src/props/shadow/index.ts","../src/props/space/index.ts","../src/props/transition/index.ts","../src/props/typography/index.ts","../src/props/styled-system-layout/index.ts","../src/core/get.ts","../src/core/createStyleFunction.ts","../src/core/sort.ts","../src/core/merge.ts","../src/pseudos/index.ts","../src/core/createSystem.ts","../src/core/parseResponsive.ts","../src/core/createCss.ts","../src/propNames.ts","../src/shouldForwardProp.ts","../src/index.ts"],"sourcesContent":["import { PropConfigCollection } from '../../core/types';\n\nexport const background: PropConfigCollection = {\n  background: true,\n  backgroundImage: true,\n  backgroundSize: true,\n  backgroundPosition: true,\n  backgroundRepeat: true,\n};\n\nbackground.bgImage = background.backgroundImage;\nbackground.bgSize = background.backgroundSize;\nbackground.bgPosition = background.backgroundPosition;\nbackground.bgRepeat = background.backgroundRepeat;\n\nexport default background;\n","// Full credit goes to modulz/stitches\n// Handles complex CSS values and functions like rgba, linear-gradient,\n// and other things with parenthesis\n// https://github.com/modulz/stitches/blob/1ea8656e849d48b08a9222b89cb919936b0f5f93/packages/core/src/shorthand-parser/value-tokenizer.ts\n\nconst TOKEN_STRING = 1;\nconst TOKEN_QUOTED_STRING = 2;\nconst TOKEN_FUNCTION = 3;\nconst TOKEN_BRACKET = 4;\n\ntype TokenType =\n  | typeof TOKEN_STRING\n  | typeof TOKEN_QUOTED_STRING\n  | typeof TOKEN_FUNCTION\n  | typeof TOKEN_BRACKET\n  | 0;\n\nlet currentType: TokenType;\nlet currentToken = '';\nlet currentDepth = 0;\nlet tokenGroups: string[][] = [[]];\n\nexport const tokenizeValue = (str: string) => {\n  resetCurrentToken();\n  tokenGroups = [[]];\n  if (!str) {\n    return tokenGroups;\n  }\n  const strLength = str.length;\n  for (let i = 0; i < strLength; i++) {\n    const char = str[i];\n    switch (char) {\n      // whitespace\n      case ' ':\n        if (currentType === TOKEN_STRING) {\n          addCurrentTokenToGroup();\n        } else if (currentType) {\n          currentToken += char;\n        }\n        break;\n      // new token group\n      case ',':\n        if (!currentDepth) {\n          addCurrentTokenToGroup();\n          addNewTokenGroup();\n        } else {\n          currentToken += char;\n        }\n        break;\n\n      // Quoted string:\n      case '\"':\n        currentToken += char;\n        if (!currentDepth && !currentType) {\n          currentType = TOKEN_QUOTED_STRING;\n          currentDepth = 1;\n        } else if (currentDepth === 1 && currentType === TOKEN_QUOTED_STRING) {\n          currentDepth = 0;\n          addCurrentTokenToGroup();\n        }\n        break;\n\n      // Css function:\n      case '(':\n        if (!currentDepth) currentType = TOKEN_FUNCTION;\n        currentDepth++;\n        currentToken += char;\n        break;\n\n      case ')':\n        currentToken += char;\n        currentDepth--;\n        if (currentType === TOKEN_FUNCTION && !currentDepth)\n          addCurrentTokenToGroup();\n        break;\n\n      // Bracket values:\n      case '[':\n        if (!currentDepth) currentType = TOKEN_BRACKET;\n        currentToken += char;\n        currentDepth++;\n        break;\n      case ']':\n        currentToken += char;\n        currentDepth--;\n        if (!currentDepth) addCurrentTokenToGroup();\n        break;\n\n      default:\n        if (!currentType) currentType = TOKEN_STRING;\n        currentToken += char;\n    }\n  }\n  if (currentToken) addCurrentTokenToGroup();\n  return tokenGroups;\n};\n/**\n * UTILS:\n */\n\n/**\n * Resets the current token info\n */\nfunction resetCurrentToken() {\n  currentDepth = currentType = 0;\n  currentToken = '';\n}\n/**\n * Adds current token to the stack then starts a new one\n */\nfunction addCurrentTokenToGroup() {\n  if (currentType) tokenGroups[tokenGroups.length - 1].push(currentToken);\n  resetCurrentToken();\n}\n/**\n * Adds a new token group and requests a new one\n * For things like animations or box shadow where there might be multiple rules\n * applied to the same value\n */\nfunction addNewTokenGroup() {\n  tokenGroups[tokenGroups.length] = [];\n  resetCurrentToken();\n}\n","import { Transform } from '../../core/types';\nimport { tokenizeValue } from '../tokenizeValue';\n\nexport const borderShorthandTransform: Transform = ({\n  path,\n  object,\n  props,\n  strict,\n  get,\n}) => {\n  if (typeof path !== 'string') {\n    return path;\n  }\n  let border = get(props?.theme?.borders || object, path);\n  if (border) {\n    return border;\n  }\n  const [[width, style, color]] = tokenizeValue(path);\n\n  const borderWidth = get(\n    props?.theme?.borderWidths,\n    width,\n    strict && !!object ? undefined : width\n  );\n  const borderStyle = get(\n    props?.theme?.borderStyles,\n    style,\n    strict && !!object ? undefined : style\n  );\n  const borderColor = get(\n    props?.theme?.colors,\n    color,\n    strict && !!object ? undefined : color\n  );\n  return [borderWidth, borderStyle, borderColor].filter(Boolean).join(' ');\n};\n","import { PropConfigCollection } from '../../core/types';\nimport { borderShorthandTransform } from './borderShorthandTransform';\n\nconst config: PropConfigCollection = {\n  border: {\n    property: 'border',\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n  borderWidth: {\n    property: 'borderWidth',\n    scale: 'borderWidths',\n  },\n  borderStyle: {\n    property: 'borderStyle',\n    scale: 'borderStyles',\n  },\n  borderColor: {\n    property: 'borderColor',\n    scale: 'colors',\n  },\n  borderRadius: {\n    property: 'borderRadius',\n    scale: 'radii',\n  },\n  borderTop: {\n    property: 'borderTop',\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n  borderTopLeftRadius: {\n    property: 'borderTopLeftRadius',\n    scale: 'radii',\n  },\n  borderTopRightRadius: {\n    property: 'borderTopRightRadius',\n    scale: 'radii',\n  },\n  borderRight: {\n    property: 'borderRight',\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n  borderBottom: {\n    property: 'borderBottom',\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n  borderBottomLeftRadius: {\n    property: 'borderBottomLeftRadius',\n    scale: 'radii',\n  },\n  borderBottomRightRadius: {\n    property: 'borderBottomRightRadius',\n    scale: 'radii',\n  },\n  borderLeft: {\n    property: 'borderLeft',\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n  borderX: {\n    properties: ['borderLeft', 'borderRight'],\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n  borderY: {\n    properties: ['borderTop', 'borderBottom'],\n    scale: 'borders',\n    transform: borderShorthandTransform,\n  },\n};\n\nconfig.borderTopWidth = {\n  property: 'borderTopWidth',\n  scale: 'borderWidths',\n};\n\nconfig.borderTopColor = {\n  property: 'borderTopColor',\n  scale: 'colors',\n};\nconfig.borderTopStyle = {\n  property: 'borderTopStyle',\n  scale: 'borderStyles',\n};\nconfig.borderTopLeftRadius = {\n  property: 'borderTopLeftRadius',\n  scale: 'radii',\n};\nconfig.borderTopRightRadius = {\n  property: 'borderTopRightRadius',\n  scale: 'radii',\n};\nconfig.borderBottomWidth = {\n  property: 'borderBottomWidth',\n  scale: 'borderWidths',\n};\nconfig.borderBottomColor = {\n  property: 'borderBottomColor',\n  scale: 'colors',\n};\nconfig.borderBottomStyle = {\n  property: 'borderBottomStyle',\n  scale: 'borderStyles',\n};\nconfig.borderBottomLeftRadius = {\n  property: 'borderBottomLeftRadius',\n  scale: 'radii',\n};\nconfig.borderBottomRightRadius = {\n  property: 'borderBottomRightRadius',\n  scale: 'radii',\n};\nconfig.borderLeftWidth = {\n  property: 'borderLeftWidth',\n  scale: 'borderWidths',\n};\nconfig.borderLeftColor = {\n  property: 'borderLeftColor',\n  scale: 'colors',\n};\nconfig.borderLeftStyle = {\n  property: 'borderLeftStyle',\n  scale: 'borderStyles',\n};\nconfig.borderRightWidth = {\n  property: 'borderRightWidth',\n  scale: 'borderWidths',\n};\nconfig.borderRightColor = {\n  property: 'borderRightColor',\n  scale: 'colors',\n};\nconfig.borderRightStyle = {\n  property: 'borderRightStyle',\n  scale: 'borderStyles',\n};\n\nexport const border = config;\n","import { PropConfigCollection } from '../../core/types';\n\nexport const color: PropConfigCollection = {\n  color: {\n    property: 'color',\n    scale: 'colors',\n  },\n  backgroundColor: {\n    property: 'backgroundColor',\n    scale: 'colors',\n  },\n  fill: {\n    property: 'fill',\n    scale: 'colors',\n  },\n  stroke: {\n    property: 'stroke',\n    scale: 'colors',\n  },\n  opacity: true,\n};\ncolor.bg = color.backgroundColor;\ncolor.textColor = color.color;\n","import { PropConfigCollection } from '../../core/types';\n\nexport const flexContainer: PropConfigCollection = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n};\n\nexport const flexItem: PropConfigCollection = {\n  // item\n  flex: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: true,\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n};\n\nexport const flexbox = {\n  ...flexContainer,\n  ...flexItem,\n};\n\nexport default flexbox;\n","import { PropConfigCollection } from '../../core/types';\n\nexport const gridItem: PropConfigCollection = {\n  gridArea: true,\n  gridColumnStart: true,\n  gridColumnEnd: true,\n  gridRowStart: true,\n  gridRowEnd: true,\n  justifySelf: true,\n  alignSelf: true,\n  placeSelf: true,\n};\n\nexport const gridContainer: PropConfigCollection = {\n  gap: {\n    property: 'gap',\n    scale: 'space',\n  },\n  gridGap: {\n    property: 'gridGap',\n    scale: 'space',\n  },\n  gridColumnGap: {\n    property: 'gridColumnGap',\n    scale: 'space',\n  },\n  gridRowGap: {\n    property: 'gridRowGap',\n    scale: 'space',\n  },\n  gridColumn: true,\n  gridRow: true,\n  gridAutoFlow: true,\n  gridAutoColumns: true,\n  gridAutoRows: true,\n  gridTemplateColumns: true,\n  gridTemplateRows: true,\n  gridTemplateAreas: true,\n};\n\nexport const grid: PropConfigCollection = {\n  ...gridItem,\n  ...gridContainer,\n};\n\nexport default grid;\n","import { PropConfigCollection } from '../../core/types';\n\nexport const layout: PropConfigCollection = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n};\n","import { Transform } from '../core/types';\n\nconst isNumber = (n: unknown): boolean => typeof n === 'number' && !isNaN(n);\n\nexport const positiveOrNegative: Transform = ({\n  path,\n  object,\n  strict,\n  get,\n}) => {\n  if (!isNumber(path)) {\n    if (typeof path === 'string' && path.startsWith('-')) {\n      const raw = path.slice(1);\n      const value = get(object, raw, strict && !!object ? undefined : raw);\n      if (isNumber(value)) {\n        return value * -1;\n      }\n      return `-${value}`;\n    }\n    return get(object, path, strict && !!object ? undefined : path);\n  }\n\n  const num = path as number;\n\n  const isNegative = num < 0;\n  const absolute = Math.abs(num);\n  const value = get(\n    object,\n    absolute,\n    strict && !!object ? undefined : absolute\n  );\n  if (isNumber(value)) {\n    return value * (isNegative ? -1 : 1);\n  }\n\n  if (value == null) {\n    return;\n  }\n\n  return isNegative ? `-${value}` : value;\n};\n","import { PropConfigCollection } from '../../core/types';\nimport { positiveOrNegative } from '../positiveOrNegative';\n\nexport const position: PropConfigCollection = {\n  position: true,\n  zIndex: {\n    property: 'zIndex',\n    scale: 'zIndices',\n  },\n  top: {\n    property: 'top',\n    scale: 'space',\n    transform: positiveOrNegative,\n  },\n  right: {\n    property: 'right',\n    scale: 'space',\n    transform: positiveOrNegative,\n  },\n  bottom: {\n    property: 'bottom',\n    scale: 'space',\n    transform: positiveOrNegative,\n  },\n  left: {\n    property: 'left',\n    scale: 'space',\n    transform: positiveOrNegative,\n  },\n};\n","import { Transform } from '../../core/types';\nimport { tokenizeValue } from '../tokenizeValue';\n\nexport const getShadow: Transform = ({ path, object, get, props, strict }) => {\n  let result = get(object, path);\n  if (result) {\n    return result;\n  }\n  if (typeof path === 'string') {\n    return tokenizeValue(path)\n      .map((chain) =>\n        chain\n          .map((val) =>\n            get(props?.theme?.colors, val, strict && !!object ? undefined : val)\n          )\n          .join(' ')\n      )\n      .join(', ');\n  }\n  return path;\n};\n","import { PropConfigCollection } from '../../core/types';\nimport { getShadow } from './getShadow';\n\nexport const shadow: PropConfigCollection = {\n  boxShadow: {\n    property: 'boxShadow',\n    scale: 'shadows',\n    transform: getShadow,\n  },\n  textShadow: {\n    property: 'textShadow',\n    scale: 'shadows',\n    transform: getShadow,\n  },\n};\n","import { PropConfigCollection, Transform } from '../../core/types';\nimport { positiveOrNegative } from '../positiveOrNegative';\n\nconst getMargin: Transform = ({ path, object, props, strict, get }) => {\n  // Not using shorthand, just a theme value, e.g, m={4}\n  if (typeof path === 'number') {\n    const result = positiveOrNegative({ path, object, props, strict, get });\n    if (result) {\n      return result;\n    }\n  }\n\n  if (typeof path === 'string') {\n    const arr = path.split(' ');\n\n    // applied to all sides, return a number or string\n    // e.g., m=\"2\" or m=\"$2\"\n    if (arr.length === 1) {\n      return positiveOrNegative({ path, object, props, strict, get });\n    }\n\n    return arr\n      .reduce((acc: string[], curr: string) => {\n        let value = positiveOrNegative({\n          get,\n          path: curr,\n          object,\n          props,\n          strict,\n        });\n\n        if (typeof value === 'number') {\n          // if a number is returned, it's not converted\n          // to a pixel value by the css parser in most libraries\n          // so we need to make it a string with a pixel value\n          value = `${value}px`;\n        }\n        return [...acc, value];\n      }, [])\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  return path;\n};\n\nconst getPadding: Transform = ({ path: value, object, props, strict, get }) => {\n  // Not using shorthand, just a theme value, e.g, p={4}\n  if (typeof value === 'number') {\n    const result = get(object, value);\n    if (result) {\n      return result;\n    }\n  }\n\n  if (typeof value === 'string') {\n    const arr = value.split(' ');\n\n    // applied to all sides, return a number or string\n    // e.g., m=\"2\" or m=\"$2\"\n    if (arr.length === 1) {\n      return get(props?.theme?.space, value, strict ? undefined : value);\n    }\n\n    return value\n      .split(' ')\n      .reduce((acc: string[], curr: string) => {\n        let value = get(props?.theme?.space, curr, strict ? undefined : curr);\n        if (typeof value === 'number') {\n          // if a number is returned, it's not converted\n          // to a pixel value by the css parser in most libraries\n          // so we need to make it a string with a pixel value\n          value = `${value}px`;\n        }\n        return [...acc, value];\n      }, [])\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  return value;\n};\n\nexport const margin: PropConfigCollection = {\n  margin: {\n    property: 'margin',\n    scale: 'space',\n    transform: getMargin,\n  },\n  marginTop: {\n    property: 'marginTop',\n    scale: 'space',\n    transform: getMargin,\n  },\n  marginRight: {\n    property: 'marginRight',\n    scale: 'space',\n    transform: getMargin,\n  },\n  marginBottom: {\n    property: 'marginBottom',\n    scale: 'space',\n    transform: getMargin,\n  },\n  marginLeft: {\n    property: 'marginLeft',\n    scale: 'space',\n    transform: getMargin,\n  },\n  marginX: {\n    properties: ['marginLeft', 'marginRight'],\n    scale: 'space',\n    transform: getMargin,\n  },\n  marginY: {\n    properties: ['marginTop', 'marginBottom'],\n    scale: 'space',\n    transform: getMargin,\n  },\n};\nmargin.m = margin.margin;\nmargin.mt = margin.marginTop;\nmargin.mr = margin.marginRight;\nmargin.mb = margin.marginBottom;\nmargin.ml = margin.marginLeft;\nmargin.mx = margin.marginX;\nmargin.my = margin.marginY;\n\nexport const padding: PropConfigCollection = {\n  padding: {\n    property: 'padding',\n    scale: 'space',\n    transform: getPadding,\n  },\n  paddingTop: {\n    property: 'paddingTop',\n    scale: 'space',\n    transform: getPadding,\n  },\n  paddingRight: {\n    property: 'paddingRight',\n    scale: 'space',\n    transform: getPadding,\n  },\n  paddingBottom: {\n    property: 'paddingBottom',\n    scale: 'space',\n    transform: getPadding,\n  },\n  paddingLeft: {\n    property: 'paddingLeft',\n    scale: 'space',\n    transform: getPadding,\n  },\n  paddingX: {\n    properties: ['paddingLeft', 'paddingRight'],\n    scale: 'space',\n    transform: getPadding,\n  },\n  paddingY: {\n    properties: ['paddingTop', 'paddingBottom'],\n    scale: 'space',\n    transform: getPadding,\n  },\n};\npadding.p = padding.padding;\npadding.pt = padding.paddingTop;\npadding.pr = padding.paddingRight;\npadding.pb = padding.paddingBottom;\npadding.pl = padding.paddingLeft;\npadding.px = padding.paddingX;\npadding.py = padding.paddingY;\n\nexport const space = { ...padding, ...margin };\n","import { PropConfigCollection, Transform } from '../../core/types';\nimport { tokenizeValue } from '../tokenizeValue';\n\nconst parseTransition: Transform = ({ path, object, get, strict }) => {\n  let result = get(object, path);\n  if (result) {\n    return result;\n  }\n\n  // '$tokenValue, $anotherTokenValue'\n  // '$tokenValue, property duration easing'\n  if (typeof path === 'string') {\n    const transitions = tokenizeValue(path);\n    result = transitions\n      .map((transition) => {\n        if (transition.length === 1) {\n          return get(\n            object,\n            transition[0],\n            strict && !!object ? undefined : transition[0]\n          );\n        }\n        return transition.join(' ');\n      })\n      .join(', ');\n    return result;\n  }\n\n  return path;\n};\n\nexport const transition: PropConfigCollection = {\n  transition: {\n    property: 'transition',\n    scale: 'transitions',\n    transform: parseTransition,\n  },\n  transitionDuration: {\n    property: 'transitionDuration',\n    scale: 'transitionDurations',\n  },\n  transitionTimingFunction: {\n    property: 'transitionTimingFunction',\n    scale: 'transitionTimingFunctions',\n  },\n  transitionProperty: true,\n  transitionDelay: true,\n};\n","import { PropConfigCollection } from '../../core/types';\n\nexport const typography: PropConfigCollection = {\n  fontFamily: {\n    property: 'fontFamily',\n    scale: 'fonts',\n  },\n  fontSize: {\n    property: 'fontSize',\n    scale: 'fontSizes',\n  },\n  fontWeight: {\n    property: 'fontWeight',\n    scale: 'fontWeights',\n  },\n  lineHeight: {\n    property: 'lineHeight',\n    scale: 'lineHeights',\n  },\n  letterSpacing: {\n    property: 'letterSpacing',\n    scale: 'letterSpacings',\n  },\n  textAlign: true,\n  fontStyle: true,\n};\n","import { PropConfigCollection, Transform } from '../../core/types';\nimport { Property } from 'csstype';\n\nconst isNumber = (n: unknown) => typeof n === 'number' && !isNaN(n);\n\nconst getWidth: Transform = ({ path, object, get }) => {\n  let defaultValue = path;\n  if (isNumber(path)) {\n    const n = path as number;\n    defaultValue = n > 1 ? path : `${n * 100}%`;\n  }\n  return get(object, path, defaultValue);\n};\n\nexport const layout: PropConfigCollection = {\n  width: {\n    property: 'width',\n    scale: 'sizes',\n    transform: getWidth,\n  },\n  height: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  minWidth: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minHeight: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxWidth: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxHeight: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  size: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  overflow: true,\n  overflowX: true,\n  overflowY: true,\n  display: true,\n  verticalAlign: true,\n};\n\nexport interface LayoutProps {\n  height?: Property.Height;\n  width?: Property.Width;\n  minWidth?: Property.MinWidth;\n  minHeight?: Property.MinHeight;\n  maxWidth?: Property.MaxWidth;\n  maxHeight?: Property.MaxHeight;\n  size?: Property.Width;\n  overflow?: Property.Overflow;\n  overflowX?: Property.OverflowX;\n  overflowY?: Property.OverflowY;\n  display?: Property.Display;\n  verticalAlign?: Property.VerticalAlign;\n}\n","import { Get } from './types';\n\n/**\n * Generic \"get\" function\n * Used with 'noprefix' tokenPrefix value\n */\nexport const get: Get = (object, path, defaultValue) => {\n  if (!object) {\n    return defaultValue;\n  }\n\n  const route = typeof path === 'string' ? path.split('.') : [path];\n\n  // Start with theme, that will get narrowed down\n  let result: any = object;\n\n  for (let p = 0; p < route.length; p++) {\n    // For the length of the map, dive deeper into the object\n    // and return the property at that depth\n    const next = route[p];\n    if (result && (typeof next === 'number' || typeof next === 'string')) {\n      result = result[next];\n    } else {\n      result = undefined;\n    }\n  }\n\n  return result === undefined ? defaultValue : result;\n};\n\n/**\n * Requires path to have '$' prefixing the value\n * Used with 'prefix' tokenPrefix value\n */\nexport const prefixGet: Get = (object, path, defaultValue) => {\n  let result;\n\n  if (typeof path === 'string' && path.startsWith('$')) {\n    result = get(object, path.slice(1));\n  }\n\n  return result === undefined ? defaultValue : result;\n};\n\n/**\n * Supports '$' prefix or not\n * Used with 'all' tokenPrefix value\n */\nexport const allGet: Get = (object, path, defaultValue) => {\n  let result = get(object, path);\n\n  if (typeof path === 'string' && path.startsWith('$')) {\n    result = get(object, path.slice(1));\n  }\n\n  return result === undefined ? defaultValue : result;\n};\n\nexport const memoizeGet = (fn: Get) => {\n  let cache = new WeakMap();\n\n  const memoizedFn: Get = (obj, path, fallback) => {\n    if (typeof obj === 'undefined') {\n      return fn(obj, path, fallback);\n    }\n\n    if (!cache.has(obj)) {\n      cache.set(obj, new Map());\n    }\n\n    const map = cache.get(obj);\n\n    if (map.has(path)) {\n      return map.get(path);\n    }\n\n    const value = fn(obj, path, fallback);\n\n    map.set(path, value);\n\n    return value;\n  };\n\n  return memoizedFn;\n};\n\nexport const memoizedGet = {\n  all: memoizeGet(allGet),\n  prefix: memoizeGet(prefixGet),\n  noprefix: memoizeGet(get),\n};\n","import { memoizedGet } from './get';\nimport {\n  Props,\n  Cache,\n  StyleFunction,\n  Transform,\n  MaybeCSSProperty,\n} from './types';\n\nconst defaultTransform: Transform = ({ path, object, strict, get }) => {\n  return get(object, path, strict === true && !!object ? undefined : path);\n};\n\nexport const createStyleFunction: StyleFunction = ({\n  properties,\n  property,\n  scale,\n  transform = defaultTransform,\n  defaultScale,\n  tokenPrefix,\n}) => {\n  const _properties = properties || [property];\n\n  if (!tokenPrefix || !['all', 'noprefix', 'prefix'].includes(tokenPrefix)) {\n    throw new Error(\n      `Invalid tokenPrefix configuration option. Expected \"all\", \"noprefix\" or \"prefix\". Received: ${tokenPrefix}`\n    );\n  }\n\n  const get = memoizedGet[tokenPrefix];\n\n  const systemConfig = (\n    value: number | string,\n    scale: any,\n    props: Props,\n    cache?: Cache\n  ) => {\n    const result: Record<string, any> = {};\n\n    let n = value;\n    n = transform({\n      path: value,\n      object: scale,\n      props,\n      strict: cache?.strict,\n      get,\n    });\n\n    if (n === null) {\n      return result;\n    }\n    _properties.forEach((prop: MaybeCSSProperty | undefined) => {\n      if (prop) {\n        result[prop] = n;\n      }\n    });\n    return result;\n  };\n\n  Object.assign(systemConfig, { scale, defaultScale });\n  return systemConfig;\n};\n","// String.prototype.localeCompare vs Intl.Collator.compare\n// https://stackoverflow.com/a/52369951\nconst collator = new Intl.Collator(undefined, {\n  numeric: true,\n  sensitivity: 'base',\n});\n\ninterface SomeObject {\n  [x: string]: unknown;\n}\n\n// Array.sort an object\nexport const sort = (obj: SomeObject) => {\n  const next: SomeObject = {};\n  Object.keys(obj)\n    .sort((a, b) => collator.compare(a, b))\n    .forEach((key) => {\n      next[key] = obj[key];\n    });\n  return next;\n};\n","interface SomeObj {\n  [x: string]: any;\n}\n\nfunction mergeObj(a: {}, b: {}) {\n  return { ...a, ...b };\n}\n\nexport const merge = (a: SomeObj, b: SomeObj) => {\n  let result = mergeObj(a, b);\n  for (const key in a) {\n    if (!a[key] || typeof b[key] !== 'object') {\n      continue;\n    }\n    result = mergeObj(result, {\n      [key]: mergeObj(a[key], b[key]),\n    });\n  }\n  return result;\n};\n","export const pseudoSelectors = {\n  _hover: '&:hover',\n  _focus: '&:focus',\n  _focusWithin: '&:focus-within',\n  _focusVisible: '&:focus-visible',\n  _active: '&:active',\n  _visited: '&:visited',\n  _selection: '&::selection',\n  _before: '&::before',\n  _after: '&::after',\n  _placeholder: '&::placeholder',\n  _hoverAndFocus: '&:hover, &:focus',\n  _disabled:\n    '&[disabled], &[disabled]:hover, &[disabled]:focus, &[aria-disabled], &[aria-disabled]:hover, &[aria-disabled]:focus',\n  _readOnly: '&[readOnly]',\n  _first: '&:first-child',\n  _last: '&:last-child',\n  _notFirst: '&:not(:first-of-type)',\n  _notLast: '&:not(:last-of-type)',\n  _checked: '&[aria-checked=true], &[checked]',\n  _odd: '&:nth-of-type(odd)',\n  _even: '&:nth-of-type(even)',\n};\n\ntype PseudoSelectors = typeof pseudoSelectors;\n\n// Allow \"content\" prop within _before or _after\nexport type PseudoProps<P> = {\n  [K in keyof PseudoSelectors]?: K extends '_before' | '_after'\n    ? (P & { content?: string }) | PseudoProps<P>\n    : P | PseudoProps<P>;\n};\n","import { parseResponsiveStyle, parseResponsiveObject } from './parseResponsive';\nimport { createStyleFunction } from './createStyleFunction';\nimport { get } from './get';\nimport {\n  SystemConfig,\n  PropConfigCollection,\n  Props,\n  SomeObject,\n  Cache,\n} from './types';\nimport { SystemProp } from '../types/system-props';\nimport { sort } from './sort';\nimport { merge } from './merge';\nimport { pseudoSelectors as defaultPseudos } from '../pseudos';\nimport * as CSS from 'csstype';\n\nexport interface Parser {\n  (...args: any[]): any;\n  config: { [key: string]: SystemConfig };\n  propNames: string[];\n  cache: Cache;\n}\n\nconst createMediaQuery = (n: string) => `@media screen and (min-width: ${n})`;\n\nfunction parseBreakpoints(breakpoints: SystemProp<string | number>) {\n  let bps = breakpoints;\n  if (!Array.isArray(breakpoints)) {\n    bps = Object.values(breakpoints);\n  }\n  return (bps as string[]).map(createMediaQuery);\n}\n\nexport const createParser = (\n  config: { [x: string]: SystemConfig },\n  pseudoSelectors: { [x: string]: string } = {},\n  strict: boolean = false\n) => {\n  const cache: Cache = { strict, key: '__systemprops__' };\n\n  const parse: Parser = (props: Props) => {\n    let styles: Record<string, any> = {};\n    let shouldSort = false;\n\n    // check cache\n    let isCacheBusted = false;\n    if (\n      typeof props.theme?.systemPropsCacheKey !== 'undefined' &&\n      props.theme.systemPropsCacheKey !== cache.key\n    ) {\n      cache.key = props.theme.systemPropsCacheKey;\n      isCacheBusted = true;\n    }\n\n    const parseEntry = (obj: SomeObject, key: string) => {\n      const systemConfig = config[key];\n      let propValue: any = obj[key];\n\n      // See issue #35\n      if (propValue === undefined) {\n        return {};\n      }\n\n      const scale = get(props.theme, systemConfig.scale);\n\n      if (typeof propValue === 'function') {\n        // e.g.,\n        // <Box border={t => `1px solid ${t.colors.primary}`} />\n        propValue = propValue(props.theme);\n      }\n\n      if (typeof propValue === 'object') {\n        cache.breakpoints =\n          (!isCacheBusted && cache.breakpoints) || props?.theme?.breakpoints;\n\n        if (Array.isArray(propValue)) {\n          if (typeof cache.breakpoints === 'undefined') {\n            throw new Error(\n              'The system props parser could not find a `breakpoints` property in the theme object, which is required for responsive styles to work. Make sure that the theme object has a breakpoints property.'\n            );\n          }\n\n          cache.media = (!isCacheBusted && cache.media) || [\n            null,\n            ...parseBreakpoints(cache.breakpoints),\n          ];\n\n          return parseResponsiveStyle({\n            cache,\n            systemConfig,\n            scale,\n            propValue,\n            props: obj,\n          });\n        }\n\n        if (propValue !== null) {\n          shouldSort = true;\n          return parseResponsiveObject({\n            cache,\n            systemConfig,\n            scale,\n            propValue,\n            props: obj,\n          });\n        }\n      }\n\n      return systemConfig(propValue, scale, props, cache);\n    };\n\n    for (const key in props) {\n      // e.g., { _hover: { ... } }\n      if (pseudoSelectors[key]) {\n        // _hover -> '&:hover'\n        const pseudoSelector = pseudoSelectors[key];\n        const pseudoStyles: SomeObject = props[key];\n        for (const pseudoStyleKey in pseudoStyles) {\n          styles[pseudoSelector] = {\n            ...(styles[pseudoSelector] as object),\n            ...parseEntry(pseudoStyles, pseudoStyleKey),\n          };\n\n          // sort object-based responsive styles\n          if (shouldSort) {\n            styles[pseudoSelectors[key]] = sort(\n              styles[pseudoSelectors[key]] as SomeObject\n            );\n            shouldSort = false;\n          }\n        }\n        continue;\n      }\n\n      // the prop is not a system prop, so bail\n      if (!config[key]) {\n        continue;\n      }\n\n      styles = merge(styles, parseEntry(props, key));\n    }\n\n    // sort object-based responsive styles\n    if (shouldSort) {\n      styles = sort(styles);\n    }\n\n    return styles;\n  };\n\n  parse.config = config;\n  parse.propNames = Object.keys(config);\n  parse.cache = cache;\n\n  const keys = Object.keys(config).filter((k) => k !== 'config');\n  if (keys.length > 1) {\n    keys.forEach((key) => {\n      Object.assign(parse, { [key]: createParser({ [key]: config[key] }) });\n    });\n  }\n\n  return parse;\n};\n\nexport const createSystem = ({\n  strict = false,\n  pseudoSelectors = defaultPseudos,\n  tokenPrefix = 'prefix',\n}: {\n  pseudoSelectors?: Record<string, string>;\n  strict?: boolean;\n  tokenPrefix?: 'prefix' | 'noprefix' | 'all';\n} = {}) => {\n  const system = (arg: PropConfigCollection) => {\n    const config: { [x: string]: SystemConfig } = {};\n    Object.keys(arg).forEach((key) => {\n      const conf = arg[key];\n      if (conf === true) {\n        // shortcut definition\n        config[key] = createStyleFunction({\n          property: key as keyof CSS.Properties,\n          scale: key,\n          tokenPrefix,\n        });\n        return;\n      }\n      if (typeof conf === 'function') {\n        return;\n      }\n      config[key] = createStyleFunction({ ...conf, tokenPrefix });\n    });\n    const parser = createParser(config, pseudoSelectors, strict);\n    return parser;\n  };\n\n  return system;\n};\n","import { Cache, SystemConfig, Props } from './types';\nimport {\n  ResponsiveArray,\n  ResponsiveObject,\n  Theme,\n} from '../types/system-props';\n\nconst createMediaQuery = (n: string) => `@media screen and (min-width: ${n})`;\n\nexport const parseResponsiveStyle = ({\n  cache,\n  systemConfig,\n  scale,\n  propValue,\n  props,\n}: {\n  cache: Cache;\n  systemConfig: SystemConfig;\n  scale: string;\n  propValue: Array<\n    string | number | ((arg0: Theme | undefined) => string | number)\n  >;\n  props: Props;\n}) => {\n  let styles = {};\n  const mediaQueries = cache.media as ResponsiveArray<string | number>;\n  propValue.slice(0, mediaQueries.length).forEach((valueAtQuery, i) => {\n    // e.g. <Box color={[theme => theme.colors.primary, theme => theme.colors.secondary]} />\n    const value =\n      typeof valueAtQuery === 'function'\n        ? valueAtQuery(props.theme)\n        : valueAtQuery;\n\n    const media = mediaQueries[i];\n    // @ts-ignore\n    const style: SystemConfig = systemConfig(value, scale, props, cache);\n\n    if (!media) {\n      styles = { ...styles, ...style };\n    } else {\n      styles = {\n        ...styles,\n        [media]: {\n          // @ts-ignore\n          ...styles[media],\n          ...style,\n        },\n      };\n    }\n  });\n  return styles;\n};\n\nexport const parseResponsiveObject = ({\n  cache,\n  systemConfig,\n  scale,\n  propValue,\n  props,\n}: {\n  cache: Cache;\n  systemConfig: SystemConfig;\n  scale: string;\n  propValue: {\n    [x: string]:\n      | string\n      | number\n      | ((arg0: Theme | undefined) => string | number);\n  };\n  props: Props;\n}) => {\n  const breakpoints = cache.breakpoints as ResponsiveObject<string>;\n  let styles = {};\n  for (const key in propValue) {\n    // @ts-ignore\n    const breakpoint = breakpoints[key];\n    const valueAtQuery = propValue[key];\n    // e.g.\n    // <Box\n    //   color={{\n    //     [bp.bp320]: t => t.colors.primary,\n    //     [bp.bp640]: t => t.colors.secondary\n    //   }}\n    // />\n    const value =\n      typeof valueAtQuery === 'function'\n        ? valueAtQuery(props.theme)\n        : valueAtQuery;\n    // @ts-ignore\n    const style = systemConfig(value, scale, props, cache);\n    if (!breakpoint) {\n      styles = { ...styles, ...style };\n    } else {\n      const media = createMediaQuery(breakpoint);\n      styles = {\n        ...styles,\n        [media]: {\n          // @ts-ignore\n          ...styles[media],\n          ...style,\n        },\n      };\n    }\n  }\n  return styles;\n};\n","import { get, memoizedGet } from './get';\nimport { PropConfigCollection, SystemConfig } from './types';\nimport { Theme, PrefixOptions } from '../types/system-props';\nimport { merge } from './merge';\nimport { CSSObject } from '../types/css-prop';\nimport { CSSProperties } from '../types/css';\nimport { createStyleFunction } from './createStyleFunction';\n\ninterface PropsWithTheme {\n  theme: Theme;\n}\n\nexport type CSSFunctionArgs<T extends PrefixOptions> =\n  | CSSObject<T>\n  | ((theme: Theme) => CSSObject<T>);\n\nexport interface CSSFunction<T extends PrefixOptions> {\n  (args?: CSSFunctionArgs<T>): (props: PropsWithTheme) => CSSObject;\n}\n\nexport const createCss = (\n  propConfig: PropConfigCollection,\n  options: { tokenPrefix: PrefixOptions } = { tokenPrefix: 'prefix' }\n) => {\n  const { tokenPrefix } = options;\n  const config: { [x: string]: SystemConfig } = {};\n\n  Object.keys(propConfig).forEach((key) => {\n    const conf = propConfig[key];\n    if (conf === true) {\n      // shortcut definition\n      config[key] = createStyleFunction({\n        property: key as keyof CSSProperties,\n        scale: key,\n        tokenPrefix,\n      });\n      return;\n    }\n    if (typeof conf === 'function') {\n      return;\n    }\n    config[key] = createStyleFunction({ ...conf, tokenPrefix });\n  });\n\n  const css: CSSFunction<typeof tokenPrefix> =\n    (args) =>\n    ({ theme }) => {\n      if (typeof args === 'undefined') {\n        return {};\n      }\n\n      let result: CSSObject = {};\n      const styles = typeof args === 'function' ? args(theme) : args;\n\n      for (let key in styles) {\n        const x = styles[key];\n\n        // Nested selectors (pseudo selectors, media query)\n        if (x && typeof x === 'object') {\n          const nestedStyles = x;\n\n          // If key is a mediaQueries token value\n          const _get = memoizedGet[tokenPrefix];\n          const maybeQuery = _get(theme.mediaQueries, key);\n          if (typeof maybeQuery !== 'undefined') {\n            Object.assign(result, {\n              [maybeQuery]: css(nestedStyles)({ theme }),\n            });\n            continue;\n          }\n\n          Object.assign(result, {\n            [key]: css(nestedStyles)({ theme }),\n          });\n          continue;\n        }\n\n        const systemConfig = config[key];\n\n        // Not a token in the config, let pass through\n        if (!systemConfig) {\n          Object.assign(result, { [key]: x });\n          continue;\n        }\n\n        const scale = get(theme, systemConfig.scale);\n\n        const propValue = x as string | number;\n\n        result = merge(result, systemConfig(propValue, scale, { theme }));\n      }\n\n      return result;\n    };\n\n  return css;\n};\n","import { background } from './props/background';\nimport { border } from './props/border';\nimport { color } from './props/color';\nimport { grid } from './props/grid';\nimport { flexbox } from './props/flexbox';\nimport { layout } from './props/layout';\nimport { position } from './props/position';\nimport { shadow } from './props/shadow';\nimport { space } from './props/space';\nimport { typography } from './props/typography';\nimport { pseudoSelectors } from './pseudos';\n\nconst allProps = {\n  ...pseudoSelectors,\n  ...background,\n  ...border,\n  ...color,\n  ...grid,\n  ...flexbox,\n  ...layout,\n  ...position,\n  ...shadow,\n  ...space,\n  ...typography,\n};\n\nexport const propNames = Object.keys(allProps);\n","import { propNames } from './propNames';\n\nconst allPropNames = new Set(propNames);\n\nexport const shouldForwardProp = (prop: string): boolean =>\n  !allPropNames.has(prop);\n","import {\n  background,\n  border,\n  color,\n  flexbox,\n  grid,\n  layout,\n  position,\n  shadow,\n  space,\n  transition,\n  typography,\n} from './props';\nimport { createCss } from './core';\n\nexport const css = createCss(\n  {\n    ...background,\n    ...border,\n    ...color,\n    ...flexbox,\n    ...grid,\n    ...layout,\n    ...position,\n    ...shadow,\n    ...space,\n    ...transition,\n    ...typography,\n  },\n  { tokenPrefix: 'prefix' }\n);\n\nexport { createSystem, createCss, CSSFunction, CSSFunctionArgs } from './core';\nexport * from './props';\nexport * from './pseudos';\nexport * from './propNames';\nexport * from './shouldForwardProp';\nexport {\n  SystemProp,\n  ColorProps,\n  PaddingProps,\n  MarginProps,\n  SpaceProps,\n  BorderProps,\n  TypographyProps,\n  LayoutProps,\n  ShadowProps,\n  PositionProps,\n  GridItemProps,\n  GridContainerProps,\n  GridProps,\n  FlexItemProps,\n  FlexContainerProps,\n  FlexboxProps,\n  TransitionProps,\n  AllSystemProps,\n  Theme,\n} from './types/system-props';\nexport { PropConfigCollection } from './core/types';\nexport { CSSObject } from './types/css-prop';\n"],"names":["background","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","bgImage","bgSize","bgPosition","bgRepeat","currentType","currentToken","currentDepth","tokenGroups","tokenizeValue","str","resetCurrentToken","strLength","length","i","char","addCurrentTokenToGroup","push","borderShorthandTransform","path","object","props","strict","get","border","theme","borders","width","style","color","_props$theme2","borderWidths","undefined","_props$theme3","borderStyles","_props$theme4","colors","filter","Boolean","join","property","scale","transform","borderWidth","borderStyle","borderColor","borderRadius","borderTop","borderTopLeftRadius","borderTopRightRadius","borderRight","borderBottom","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderX","properties","borderY","config","backgroundColor","fill","stroke","opacity","bg","textColor","flexContainer","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flexItem","flex","flexGrow","flexShrink","flexBasis","justifySelf","alignSelf","order","flexbox","gridItem","gridArea","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","placeSelf","gridContainer","gap","gridGap","gridColumnGap","gridRowGap","gridColumn","gridRow","gridAutoFlow","gridAutoColumns","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","grid","layout","height","minWidth","minHeight","maxWidth","maxHeight","size","overflow","overflowX","overflowY","display","verticalAlign","isNumber","n","isNaN","positiveOrNegative","startsWith","raw","slice","value","isNegative","absolute","Math","abs","position","zIndex","top","right","bottom","left","getShadow","map","chain","val","_props$theme","shadow","boxShadow","textShadow","getMargin","result","arr","split","reduce","acc","curr","getPadding","space","margin","marginTop","marginRight","marginBottom","marginLeft","marginX","marginY","m","mt","mr","mb","ml","mx","my","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingX","paddingY","p","pt","pr","pb","pl","px","py","transition","transitionDuration","transitionTimingFunction","transitionProperty","transitionDelay","typography","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","textAlign","fontStyle","defaultValue","route","next","memoizeGet","fn","cache","WeakMap","obj","fallback","has","set","Map","memoizedGet","all","prefix","noprefix","defaultTransform","createStyleFunction","defaultScale","tokenPrefix","_properties","includes","Error","systemConfig","forEach","prop","Object","assign","collator","Intl","Collator","numeric","sensitivity","sort","keys","a","b","compare","key","mergeObj","merge","pseudoSelectors","_hover","_focus","_focusWithin","_focusVisible","_active","_visited","_selection","_before","_after","_placeholder","_hoverAndFocus","_disabled","_readOnly","_first","_last","_notFirst","_notLast","_checked","_odd","_even","createMediaQuery","parseBreakpoints","breakpoints","bps","Array","isArray","values","createParser","parse","styles","shouldSort","isCacheBusted","systemPropsCacheKey","parseEntry","propValue","media","mediaQueries","valueAtQuery","parseResponsiveStyle","breakpoint","parseResponsiveObject","pseudoSelector","pseudoStyles","pseudoStyleKey","propNames","k","createSystem","defaultPseudos","arg","conf","createCss","propConfig","options","css","args","x","nestedStyles","maybeQuery","_get","allProps","allPropNames","Set","shouldForwardProp"],"mappings":"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"}